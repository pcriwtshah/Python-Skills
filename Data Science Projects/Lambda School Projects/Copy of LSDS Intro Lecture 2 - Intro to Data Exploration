{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of LSDS Intro Lecture 2 - Intro to Data Exploration","version":"0.3.2","provenance":[{"file_id":"14Q---bc4G1sU5aEOz3w8D_1Q0l1_SM-B","timestamp":1551999954496}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"metadata":{"id":"4C6FJ05R-g-U","colab_type":"text"},"cell_type":"markdown","source":["# Outline:\n","\n","*   Jupyter Notebook\n","*   import libraries\n","*   read dataset\n","*   clean dataset\n","*   make a simple visualization\n","\n","\n","Notes: 20 minute rule\n","Then Google\n","Then Reach out to Staff\n","\n","If you are on the asyncronous version of the class, submit assignments using the standup form, but you can do things at your own pace. Come back and watch the videos. Remember that everything can be accessed on the syllabus website: learn.lambdaschool.com\n"]},{"metadata":{"id":"pgovSt9L_Mhy","colab_type":"text"},"cell_type":"markdown","source":["## Intro to iPython \"Jupyter\" Notebooks \n","\n","### Terminology\n","Sometimes they're called \"iPython Notebooks,\" or more commonly \"Jupyter Notebooks\" or just \"Notebooks.\" These all refer to the same thing. Jupyter is supposed to be the language-agnostic version of iPython.\n","\n","[Quora: What is the difference between Jupyter and iPython Notebooks?](https://www.quora.com/What-is-the-difference-between-Jupyter-and-IPython-Notebook)\n","\n","### The Basics:\n","Runs in the browser\n","\n","Made up of: \n","*  **code** blocks, \n","*  **markdown** text (the text instructions)\n","*  **output** such as text, graphs and tables \n","\n","**Link students to a Google Colab example so that they can look at it as it's being explained**\n","\n","Notebooks help others walk through your code and see the process that you used to arrive at your findings. They make your work reproducible by others.\n","\n","- Great for sharing reproducible analysis\n","- Great for sharing educational tutorials\n","- Great for python programming in general \n","\n","Jupyter has created a gallery of famous/useful notebooks to demonstrate the power and versatility of iPython notebooks. \n","\n","[Jupyter Gallery of Interesting iPython Notebooks](https://github.com/jupyter/jupyter/wiki/A-gallery-of-interesting-Jupyter-Notebooks)\n","\n","Popular Implementations of Jupyter Notebooks:\n","\n","* Kaggle \"Kernels\"\n","* Google \"Colabs\"\n","* Microsoft Azure Notebooks\n","* Local Jupyter Notebooks (Anaconda)\n","\n"]},{"metadata":{"id":"wm6S5ruiXXeE","colab_type":"text"},"cell_type":"markdown","source":["## Intro to Google Colaboratory\n","\n","Google Colaboratory, often referred to by its shortened name, Colab(s), is a cloud-based Jupyter Notebook environment that runs on Google Drive. Colabs are like Google Docs + Jupyter Notebooks all rolled into one. Colabs can do most anything that a local Jupyter Notebook can, but they can be shared with other Google users and don't require the installation of any software/packages. The most popular Python libraries will work right out of the box. \n","\n","\n","You can learn more about the features of Google Colaboratory and view important documentation in the [Welcome Collaboratory](https://colab.research.google.com/notebooks/welcome.ipynb\n",").\n","\n","\n","Throughout the intro course, we will distribute resources and assignments via Colabs in order to keep installation frustrations to a minimum. Advanced users should pursue a local Jupyter Notebook environment like one provided through [Anaconda](https://www.anaconda.com/download/) since this is a popular industry tool. However, for the intro course, any Jupyter Notebook setup should suffice."]},{"metadata":{"id":"q-XuwNFOg82n","colab_type":"text"},"cell_type":"markdown","source":["# How to create a new Colab \n","\n","## 1) Log into [Google Drive](https://drive.google.com/). Create a Google account if you don't already have one.\n","\n","## 2) In the top left corner, click on the \"+ New\" button.\n","\n","<center>![Click the \"+ New\" Button](http://www.ryanleeallred.com/wp-content/uploads/2018/08/Screen-Shot-2018-08-21-at-2.06.27-AM.png)</center>\n","\n","## 3) In the dropdown menu click \"More\" \n","\n","<center>![Click \"More\"](http://www.ryanleeallred.com/wp-content/uploads/2018/08/Screen-Shot-2018-08-21-at-2.07.11-AM.png)</center>\n","\n","## 4)  Select Colaboratory - We will be working in Python 3 in this course.\n","\n","<center>![Select Colaboratory](http://www.ryanleeallred.com/wp-content/uploads/2018/08/Screen-Shot-2018-08-21-at-2.07.23-AM.png)</center>\n"]},{"metadata":{"id":"Y_DYt2XVlcOC","colab_type":"text"},"cell_type":"markdown","source":["# How to copy an assignment Colab \n","\n","We will issue assignments in Colaboratory as well. One of the easiest ways to get working on an assignment is to make a copy of it to your personal google drive. Here's how to do this:\n","\n","## 1) Go to \"File\" -> \"Save a Copy in Drive...\"\n","\n","<center>![Save A Copy In Drive](http://www.ryanleeallred.com/wp-content/uploads/2018/08/save-a-copy-in-drive.png)</center>"]},{"metadata":{"id":"zjfNivKM_N3w","colab_type":"text"},"cell_type":"markdown","source":["# Modules, Packages & Libraries\n","\n","By importing \"third party\" code into our projects we can \"stand on the shoulders of giants\" to use code created by others to do some pretty cool things without knowing more than basic python syntax.\n","\n","**Terminology:**\n","\n","* **Module:** A `.py` file (the file extension for python code files) with functions that we can call to do cool things.\n","\n","* **Package:** A collection of modules in a directory (folder). There's more to it than that, but we won't don't need to get into that right now.\n","\n","* **Library:** A collection of various packages usually with related/complementary functionality/purpose. \n","\n","You'll hear all three terms used interchangeably, so don't be too worried about the exact definitions right now, just know that: \n","\n","<center>**Module < Package < Library**</center>\n","\n","[Top 20 Python Libraries](https://medium.com/activewizards-machine-learning-company/top-20-python-libraries-for-data-science-in-2018-2ae7d1db8049)"]},{"metadata":{"id":"0OZOBbY731QG","colab_type":"text"},"cell_type":"markdown","source":["# Importing Modules/Packages/Libraries\n","\n","## The `import` statement\n","\n","At the core of importing third party code is the `import` statement.\n","\n","Python comes with built-in modules that we can import to help us do things. One example is the \"math\" module. \n","\n","We will import it by using the import statement followed by the name of the module or library. \n","\n","It reads like plain English! Yay Python! Notice that `import` in the code below has its own font color. This is because it is a keyword that is reserved specifically for this purpose. (you can't use it as a variable name)"]},{"metadata":{"id":"zuZkDckX_nNk","colab_type":"code","colab":{}},"cell_type":"code","source":["# Run this cell\n","import math\n","\n","# When it finishes you should not see any output below, but the number on the \n","# left-hand side should increment to show that the cell has run successfully."],"execution_count":0,"outputs":[]},{"metadata":{"id":"bnazjdjG_NNE","colab_type":"text"},"cell_type":"markdown","source":["The `math` module comes with a lot of predefined functions that we can now call to perform specific operations. For a full list of all of the functions that are available in the math module see the [documentation](https://docs.python.org/3/library/math.html). Get used to reading documentation. It is a critical skill.\n","\n","We can access functions or variables from the math module using \"dot notation.\" Here are some examples:"]},{"metadata":{"id":"1YZzHGw6-5Cz","colab_type":"code","outputId":"7cc5590d-052f-4e17-e92a-4392cb0fb399","executionInfo":{"status":"ok","timestamp":1550018135486,"user_tz":420,"elapsed":432,"user":{"displayName":"Ryan Allred","photoUrl":"","userId":"04031804316926795705"}},"colab":{"base_uri":"https://localhost:8080/","height":67}},"cell_type":"code","source":["# Starting Value\n","long_decimal = 0.2344589030948239\n","\n","# Round up using math.ceil()\n","rounded_up = math.ceil(long_decimal)\n","print(\"long_decimal rounded up to the nearest integer:\", rounded_up)\n","\n","# Round down using math.floor()\n","rounded_down = math.floor(long_decimal)\n","print(\"long_decimal rounded down to the nearest integer:\", rounded_down)\n","\n","# Return the first number raised to the second number\n","two_to_the_third_power = math.pow(2,3) # A long variable name never hurt anyone.\n","print(\"2^3 =\", two_to_the_third_power)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["long_decimal rounded up to the nearest integer: 1\n","long_decimal rounded down to the nearest integer: 0\n","2^3 = 8.0\n"],"name":"stdout"}]},{"metadata":{"id":"VgO6HiRM-jzw","colab_type":"text"},"cell_type":"markdown","source":["Look at all of that cool stuff that we didn't have to program ourselves, but that we could do in a single line thanks to the math module!\n","\n","## `import ... from ...`  syntax\n","\n","We will import all third party code using the import keyword, however, some libraries are quite large and we might not want to import the whole thing. It is good practice to only import the functionality that you are going to need and nothing else.\n","\n","For example, if I only wanted the `.ceil()` method from the math module, I could import only that funtion by using `from ... import ...` syntax."]},{"metadata":{"id":"fE9D0cE5-i1m","colab_type":"code","outputId":"f2f50070-4b58-47d8-c12f-23b62310a3bd","executionInfo":{"status":"ok","timestamp":1550018139348,"user_tz":420,"elapsed":369,"user":{"displayName":"Ryan Allred","photoUrl":"","userId":"04031804316926795705"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"cell_type":"code","source":["# This will delete the math module, so that we can re-import \n","# only the .ceil() function. \n","del math\n","# If you're getting an error on the above line, make sure you have \n","# math module imported so that it is defined when we go to delete it. \n","\n","# import only the .ceil() function\n","from math import ceil, floor\n","\n","always_round_up = .000000000000001\n","\n","# Notice that I'm not using dot notation on the function call \n","# because I didn't import the math module itself. I only imported the ceil \n","# function *from* the math module. \n","rounded_value = ceil(always_round_up)\n","print(rounded_value)\n","\n","# Notice if I try to use any other math functions, I will get an error\n","# because I only imported the ceil function using \"from ... import ...\" syntax\n","rounded_number = floor(always_round_up)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["1\n"],"name":"stdout"}]},{"metadata":{"id":"xBAbpNYw6RGa","colab_type":"text"},"cell_type":"markdown","source":["## Aliasing Modules - the `as` keyword\n","\n","You can modify the names of modules and their functions using the `as` keyword. This is often used to shorten long module names as well as to avoid variable colisions. We will often be working with multiple libraries/modules in a project and if they use the same variable/function names then we could run into problems (variable colisions). Aliasing can help us prevent that."]},{"metadata":{"id":"IYfrz2t-6Yx5","colab_type":"code","outputId":"e51e60c2-8949-4f17-abe5-43cef5738240","executionInfo":{"status":"ok","timestamp":1550018144325,"user_tz":420,"elapsed":349,"user":{"displayName":"Ryan Allred","photoUrl":"","userId":"04031804316926795705"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"cell_type":"code","source":["import math as m\n","\n","print(m.pow(2,3))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["8.0\n"],"name":"stdout"}]},{"metadata":{"id":"0EeAvsjbFBmF","colab_type":"text"},"cell_type":"markdown","source":["You can combine aliasing and \"import ... from ...\" syntax in order to rename specific portions of modules/libraries."]},{"metadata":{"id":"7WOzgrWpFu7N","colab_type":"code","outputId":"9fbcf221-227b-4c06-d9e5-755e11f82f73","executionInfo":{"status":"ok","timestamp":1550018145789,"user_tz":420,"elapsed":347,"user":{"displayName":"Ryan Allred","photoUrl":"","userId":"04031804316926795705"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"cell_type":"code","source":["from math import ceil as c\n","\n","rounded = c(0.4444444)\n","print(rounded)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["1\n"],"name":"stdout"}]},{"metadata":{"id":"A5sS6HSexTm3","colab_type":"text"},"cell_type":"markdown","source":["### [Name A More Iconic Trio... I'll Wait...](https://twitter.com/vboykis/status/1032631145035427840)\n","\n","<center>![Iconic Trio](http://www.ryanleeallred.com/wp-content/uploads/2018/08/iconic-trio.png)</center>"]},{"metadata":{"id":"MQGVtjj7LpeM","colab_type":"text"},"cell_type":"markdown","source":["# Intro to Pandas \n","\n","The Pandas library is extremely popular for data munging and data preparation. It does not implement any significant modeling functionality, but is simply for managing, cleaning, formatting, and shaping a dataset. \n","\n","The Pandas library revolves around a certain data structure called a **DataFrame**. You can think of a dataframe like a spreadsheet with rows and columns. Each column has a header and each row has an unique identifier called an index (usually a number). Each row of our dataframe (again, think spreadsheet) represents a single **record** or entry in our dataset. \n","\n","This will all make more sense if we get some data and start playing around with it. Pandas makes it really easy to import data from a CSV to work with, so that's what we'll do. \n","\n","We are going to use the famous **Titanic Dataset** for demonstration purposes. The Titanic dataset is a list of all of the passengers on the ship's manifest. it lists particular attributes about them along with whether or not they survived. The dataset is small which will help us to work with it as beginners, but it's also not perfectly clean, which will give us an opportunity to learn some basic data cleaning techniques."]},{"metadata":{"id":"qpNlkY77RMcQ","colab_type":"text"},"cell_type":"markdown","source":["## Import the Pandas library\n","\n","We are going to create an alias reference to the Pandas library as \"pd\""]},{"metadata":{"id":"QvSltKrmRL6q","colab_type":"code","colab":{}},"cell_type":"code","source":["# Alias Pandas as pd\n","import pandas as pd"],"execution_count":0,"outputs":[]},{"metadata":{"id":"JRuOvT-KR5hX","colab_type":"text"},"cell_type":"markdown","source":["## Read Data from a CSV File\n","\n","It's common that small file-based datasets are saved in Comma-Separated-Value or CSV format. Excel spreadsheets can be saved in this format, so it only makes sense that they would be natural candidates to be imported into Pandas Dataframes.\n","\n","If you ever get confused about what python is doing and what pandas is doing, google and READ THE DOCUMENTATION! \n","\n","[Pandas Documentation](http://pandas.pydata.org/pandas-docs/stable/)\n","\n","We are going to use Pandas' .read_csv() function in order to read in a CSV from a web url (on github) and store it in a dataframe. Once we have the data read we can begin to manipulate it.\n","\n","It is common to label dataframes df for short, but you can name yours whatever you like. It's a variable name like anything else. "]},{"metadata":{"id":"qBjL_EPjRKla","colab_type":"code","colab":{}},"cell_type":"code","source":["df = pd.read_csv('https://raw.githubusercontent.com/ryanleeallred/datasets/master/titanic.csv')"],"execution_count":0,"outputs":[]},{"metadata":{"id":"KYzQcf_yzwkU","colab_type":"code","outputId":"f9038e6e-ff22-4c69-eda1-ef7d3d6cf14c","executionInfo":{"status":"ok","timestamp":1550018159612,"user_tz":420,"elapsed":8787,"user":{"displayName":"Ryan Allred","photoUrl":"","userId":"04031804316926795705"}},"colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7Ci8vIE1heCBhbW91bnQgb2YgdGltZSB0byBibG9jayB3YWl0aW5nIGZvciB0aGUgdXNlci4KY29uc3QgRklMRV9DSEFOR0VfVElNRU9VVF9NUyA9IDMwICogMTAwMDsKCmZ1bmN0aW9uIF91cGxvYWRGaWxlcyhpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IHN0ZXBzID0gdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKTsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIC8vIENhY2hlIHN0ZXBzIG9uIHRoZSBvdXRwdXRFbGVtZW50IHRvIG1ha2UgaXQgYXZhaWxhYmxlIGZvciB0aGUgbmV4dCBjYWxsCiAgLy8gdG8gdXBsb2FkRmlsZXNDb250aW51ZSBmcm9tIFB5dGhvbi4KICBvdXRwdXRFbGVtZW50LnN0ZXBzID0gc3RlcHM7CgogIHJldHVybiBfdXBsb2FkRmlsZXNDb250aW51ZShvdXRwdXRJZCk7Cn0KCi8vIFRoaXMgaXMgcm91Z2hseSBhbiBhc3luYyBnZW5lcmF0b3IgKG5vdCBzdXBwb3J0ZWQgaW4gdGhlIGJyb3dzZXIgeWV0KSwKLy8gd2hlcmUgdGhlcmUgYXJlIG11bHRpcGxlIGFzeW5jaHJvbm91cyBzdGVwcyBhbmQgdGhlIFB5dGhvbiBzaWRlIGlzIGdvaW5nCi8vIHRvIHBvbGwgZm9yIGNvbXBsZXRpb24gb2YgZWFjaCBzdGVwLgovLyBUaGlzIHVzZXMgYSBQcm9taXNlIHRvIGJsb2NrIHRoZSBweXRob24gc2lkZSBvbiBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcCwKLy8gdGhlbiBwYXNzZXMgdGhlIHJlc3VsdCBvZiB0aGUgcHJldmlvdXMgc3RlcCBhcyB0aGUgaW5wdXQgdG8gdGhlIG5leHQgc3RlcC4KZnVuY3Rpb24gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpIHsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIGNvbnN0IHN0ZXBzID0gb3V0cHV0RWxlbWVudC5zdGVwczsKCiAgY29uc3QgbmV4dCA9IHN0ZXBzLm5leHQob3V0cHV0RWxlbWVudC5sYXN0UHJvbWlzZVZhbHVlKTsKICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5leHQudmFsdWUucHJvbWlzZSkudGhlbigodmFsdWUpID0+IHsKICAgIC8vIENhY2hlIHRoZSBsYXN0IHByb21pc2UgdmFsdWUgdG8gbWFrZSBpdCBhdmFpbGFibGUgdG8gdGhlIG5leHQKICAgIC8vIHN0ZXAgb2YgdGhlIGdlbmVyYXRvci4KICAgIG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSA9IHZhbHVlOwogICAgcmV0dXJuIG5leHQudmFsdWUucmVzcG9uc2U7CiAgfSk7Cn0KCi8qKgogKiBHZW5lcmF0b3IgZnVuY3Rpb24gd2hpY2ggaXMgY2FsbGVkIGJldHdlZW4gZWFjaCBhc3luYyBzdGVwIG9mIHRoZSB1cGxvYWQKICogcHJvY2Vzcy4KICogQHBhcmFtIHtzdHJpbmd9IGlucHV0SWQgRWxlbWVudCBJRCBvZiB0aGUgaW5wdXQgZmlsZSBwaWNrZXIgZWxlbWVudC4KICogQHBhcmFtIHtzdHJpbmd9IG91dHB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIG91dHB1dCBkaXNwbGF5LgogKiBAcmV0dXJuIHshSXRlcmFibGU8IU9iamVjdD59IEl0ZXJhYmxlIG9mIG5leHQgc3RlcHMuCiAqLwpmdW5jdGlvbiogdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKSB7CiAgY29uc3QgaW5wdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaW5wdXRJZCk7CiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gZmFsc2U7CgogIGNvbnN0IG91dHB1dEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChvdXRwdXRJZCk7CiAgb3V0cHV0RWxlbWVudC5pbm5lckhUTUwgPSAnJzsKCiAgY29uc3QgcGlja2VkUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpID0+IHsKICAgICAgcmVzb2x2ZShlLnRhcmdldC5maWxlcyk7CiAgICB9KTsKICB9KTsKCiAgY29uc3QgY2FuY2VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7CiAgaW5wdXRFbGVtZW50LnBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoY2FuY2VsKTsKICBjYW5jZWwudGV4dENvbnRlbnQgPSAnQ2FuY2VsIHVwbG9hZCc7CiAgY29uc3QgY2FuY2VsUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBjYW5jZWwub25jbGljayA9ICgpID0+IHsKICAgICAgcmVzb2x2ZShudWxsKTsKICAgIH07CiAgfSk7CgogIC8vIENhbmNlbCB1cGxvYWQgaWYgdXNlciBoYXNuJ3QgcGlja2VkIGFueXRoaW5nIGluIHRpbWVvdXQuCiAgY29uc3QgdGltZW91dFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9LCBGSUxFX0NIQU5HRV9USU1FT1VUX01TKTsKICB9KTsKCiAgLy8gV2FpdCBmb3IgdGhlIHVzZXIgdG8gcGljayB0aGUgZmlsZXMuCiAgY29uc3QgZmlsZXMgPSB5aWVsZCB7CiAgICBwcm9taXNlOiBQcm9taXNlLnJhY2UoW3BpY2tlZFByb21pc2UsIHRpbWVvdXRQcm9taXNlLCBjYW5jZWxQcm9taXNlXSksCiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdzdGFydGluZycsCiAgICB9CiAgfTsKCiAgaWYgKCFmaWxlcykgewogICAgcmV0dXJuIHsKICAgICAgcmVzcG9uc2U6IHsKICAgICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICAgIH0KICAgIH07CiAgfQoKICBjYW5jZWwucmVtb3ZlKCk7CgogIC8vIERpc2FibGUgdGhlIGlucHV0IGVsZW1lbnQgc2luY2UgZnVydGhlciBwaWNrcyBhcmUgbm90IGFsbG93ZWQuCiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gdHJ1ZTsKCiAgZm9yIChjb25zdCBmaWxlIG9mIGZpbGVzKSB7CiAgICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7CiAgICBsaS5hcHBlbmQoc3BhbihmaWxlLm5hbWUsIHtmb250V2VpZ2h0OiAnYm9sZCd9KSk7CiAgICBsaS5hcHBlbmQoc3BhbigKICAgICAgICBgKCR7ZmlsZS50eXBlIHx8ICduL2EnfSkgLSAke2ZpbGUuc2l6ZX0gYnl0ZXMsIGAgKwogICAgICAgIGBsYXN0IG1vZGlmaWVkOiAkewogICAgICAgICAgICBmaWxlLmxhc3RNb2RpZmllZERhdGUgPyBmaWxlLmxhc3RNb2RpZmllZERhdGUudG9Mb2NhbGVEYXRlU3RyaW5nKCkgOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbi9hJ30gLSBgKSk7CiAgICBjb25zdCBwZXJjZW50ID0gc3BhbignMCUgZG9uZScpOwogICAgbGkuYXBwZW5kQ2hpbGQocGVyY2VudCk7CgogICAgb3V0cHV0RWxlbWVudC5hcHBlbmRDaGlsZChsaSk7CgogICAgY29uc3QgZmlsZURhdGFQcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHsKICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgcmVhZGVyLm9ubG9hZCA9IChlKSA9PiB7CiAgICAgICAgcmVzb2x2ZShlLnRhcmdldC5yZXN1bHQpOwogICAgICB9OwogICAgICByZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoZmlsZSk7CiAgICB9KTsKICAgIC8vIFdhaXQgZm9yIHRoZSBkYXRhIHRvIGJlIHJlYWR5LgogICAgbGV0IGZpbGVEYXRhID0geWllbGQgewogICAgICBwcm9taXNlOiBmaWxlRGF0YVByb21pc2UsCiAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgYWN0aW9uOiAnY29udGludWUnLAogICAgICB9CiAgICB9OwoKICAgIC8vIFVzZSBhIGNodW5rZWQgc2VuZGluZyB0byBhdm9pZCBtZXNzYWdlIHNpemUgbGltaXRzLiBTZWUgYi82MjExNTY2MC4KICAgIGxldCBwb3NpdGlvbiA9IDA7CiAgICB3aGlsZSAocG9zaXRpb24gPCBmaWxlRGF0YS5ieXRlTGVuZ3RoKSB7CiAgICAgIGNvbnN0IGxlbmd0aCA9IE1hdGgubWluKGZpbGVEYXRhLmJ5dGVMZW5ndGggLSBwb3NpdGlvbiwgTUFYX1BBWUxPQURfU0laRSk7CiAgICAgIGNvbnN0IGNodW5rID0gbmV3IFVpbnQ4QXJyYXkoZmlsZURhdGEsIHBvc2l0aW9uLCBsZW5ndGgpOwogICAgICBwb3NpdGlvbiArPSBsZW5ndGg7CgogICAgICBjb25zdCBiYXNlNjQgPSBidG9hKFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgY2h1bmspKTsKICAgICAgeWllbGQgewogICAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgICBhY3Rpb246ICdhcHBlbmQnLAogICAgICAgICAgZmlsZTogZmlsZS5uYW1lLAogICAgICAgICAgZGF0YTogYmFzZTY0LAogICAgICAgIH0sCiAgICAgIH07CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPQogICAgICAgICAgYCR7TWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCl9JSBkb25lYDsKICAgIH0KICB9CgogIC8vIEFsbCBkb25lLgogIHlpZWxkIHsKICAgIHJlc3BvbnNlOiB7CiAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgIH0KICB9Owp9CgpzY29wZS5nb29nbGUgPSBzY29wZS5nb29nbGUgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYiA9IHNjb3BlLmdvb2dsZS5jb2xhYiB8fCB7fTsKc2NvcGUuZ29vZ2xlLmNvbGFiLl9maWxlcyA9IHsKICBfdXBsb2FkRmlsZXMsCiAgX3VwbG9hZEZpbGVzQ29udGludWUsCn07Cn0pKHNlbGYpOwo=","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":54}},"cell_type":"code","source":["from google.colab import files\n","files.upload()"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","     <input type=\"file\" id=\"files-fe9bb5fa-2fe6-4456-9a48-202d496cc341\" name=\"files[]\" multiple disabled />\n","     <output id=\"result-fe9bb5fa-2fe6-4456-9a48-202d496cc341\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"execute_result","data":{"text/plain":["{}"]},"metadata":{"tags":[]},"execution_count":19}]},{"metadata":{"id":"KHKzU83SzuWS","colab_type":"code","outputId":"2c9de91d-bb61-466c-ec02-32a42e0bd8f7","executionInfo":{"status":"ok","timestamp":1550018159791,"user_tz":420,"elapsed":8582,"user":{"displayName":"Ryan Allred","photoUrl":"","userId":"04031804316926795705"}},"colab":{"base_uri":"https://localhost:8080/","height":676}},"cell_type":"code","source":["# Use the .head() function to look at the first 5 rows of our new dataframe\n","df.head()\n","\n","# We can pass in an integer to the .head function to designate the number of rows \n","# of output that we would like to see\n","df.head(20)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>survived</th>\n","      <th>pclass</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","      <th>embarked</th>\n","      <th>class</th>\n","      <th>who</th>\n","      <th>adult_male</th>\n","      <th>deck</th>\n","      <th>embark_town</th>\n","      <th>alive</th>\n","      <th>alone</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>C</td>\n","      <td>First</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>C</td>\n","      <td>Cherbourg</td>\n","      <td>yes</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>S</td>\n","      <td>First</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>C</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.4583</td>\n","      <td>Q</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Queenstown</td>\n","      <td>no</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>male</td>\n","      <td>54.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>51.8625</td>\n","      <td>S</td>\n","      <td>First</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>E</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>2.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>21.0750</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>child</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>11.1333</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>female</td>\n","      <td>14.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>30.0708</td>\n","      <td>C</td>\n","      <td>Second</td>\n","      <td>child</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>Cherbourg</td>\n","      <td>yes</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>4.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>16.7000</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>child</td>\n","      <td>False</td>\n","      <td>G</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>11</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>58.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>26.5500</td>\n","      <td>S</td>\n","      <td>First</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>C</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>20.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>13</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>39.0</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>31.2750</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>14</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>14.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.8542</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>child</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>15</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>female</td>\n","      <td>55.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>16.0000</td>\n","      <td>S</td>\n","      <td>Second</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>16</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>2.0</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>29.1250</td>\n","      <td>Q</td>\n","      <td>Third</td>\n","      <td>child</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>Queenstown</td>\n","      <td>no</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>17</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>13.0000</td>\n","      <td>S</td>\n","      <td>Second</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>18</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>31.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>18.0000</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>19</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.2250</td>\n","      <td>C</td>\n","      <td>Third</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>Cherbourg</td>\n","      <td>yes</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Unnamed: 0  survived  pclass     sex   age  sibsp  parch     fare  \\\n","0            0         0       3    male  22.0      1      0   7.2500   \n","1            1         1       1  female  38.0      1      0  71.2833   \n","2            2         1       3  female  26.0      0      0   7.9250   \n","3            3         1       1  female  35.0      1      0  53.1000   \n","4            4         0       3    male  35.0      0      0   8.0500   \n","5            5         0       3    male   NaN      0      0   8.4583   \n","6            6         0       1    male  54.0      0      0  51.8625   \n","7            7         0       3    male   2.0      3      1  21.0750   \n","8            8         1       3  female  27.0      0      2  11.1333   \n","9            9         1       2  female  14.0      1      0  30.0708   \n","10          10         1       3  female   4.0      1      1  16.7000   \n","11          11         1       1  female  58.0      0      0  26.5500   \n","12          12         0       3    male  20.0      0      0   8.0500   \n","13          13         0       3    male  39.0      1      5  31.2750   \n","14          14         0       3  female  14.0      0      0   7.8542   \n","15          15         1       2  female  55.0      0      0  16.0000   \n","16          16         0       3    male   2.0      4      1  29.1250   \n","17          17         1       2    male   NaN      0      0  13.0000   \n","18          18         0       3  female  31.0      1      0  18.0000   \n","19          19         1       3  female   NaN      0      0   7.2250   \n","\n","   embarked   class    who  adult_male deck  embark_town alive  alone  \n","0         S   Third    man        True  NaN  Southampton    no  False  \n","1         C   First  woman       False    C    Cherbourg   yes  False  \n","2         S   Third  woman       False  NaN  Southampton   yes   True  \n","3         S   First  woman       False    C  Southampton   yes  False  \n","4         S   Third    man        True  NaN  Southampton    no   True  \n","5         Q   Third    man        True  NaN   Queenstown    no   True  \n","6         S   First    man        True    E  Southampton    no   True  \n","7         S   Third  child       False  NaN  Southampton    no  False  \n","8         S   Third  woman       False  NaN  Southampton   yes  False  \n","9         C  Second  child       False  NaN    Cherbourg   yes  False  \n","10        S   Third  child       False    G  Southampton   yes  False  \n","11        S   First  woman       False    C  Southampton   yes   True  \n","12        S   Third    man        True  NaN  Southampton    no   True  \n","13        S   Third    man        True  NaN  Southampton    no  False  \n","14        S   Third  child       False  NaN  Southampton    no   True  \n","15        S  Second  woman       False  NaN  Southampton   yes   True  \n","16        Q   Third  child       False  NaN   Queenstown    no  False  \n","17        S  Second    man        True  NaN  Southampton   yes   True  \n","18        S   Third  woman       False  NaN  Southampton    no  False  \n","19        C   Third  woman       False  NaN    Cherbourg   yes   True  "]},"metadata":{"tags":[]},"execution_count":20}]},{"metadata":{"id":"7Y2pySfjTePq","colab_type":"text"},"cell_type":"markdown","source":["You can see how each row/record holds the information of a single individual aboard the ship. Columns are typically referred to as \"features\" of a dataset because they represent all of the different attributes of the records that are being represented."]},{"metadata":{"id":"E3T5kz2xU-Yx","colab_type":"text"},"cell_type":"markdown","source":["# Basic Pandas Functionality\n","\n","Now we have data! Lets demonstrate a few of the basic things that we can do with our new dataframe to help us understand what's in this dataset."]},{"metadata":{"id":"6_JeHNnoTovU","colab_type":"text"},"cell_type":"markdown","source":["## The .shape attribute\n","\n","Every dataframe has a .shape attribute that will tell us the number of rows and columns of our dataframe"]},{"metadata":{"id":"6vvfy9Z9Tr1-","colab_type":"code","outputId":"056bd35c-332a-4f9d-9ade-63ace569c48d","executionInfo":{"status":"ok","timestamp":1550018164547,"user_tz":420,"elapsed":215,"user":{"displayName":"Ryan Allred","photoUrl":"","userId":"04031804316926795705"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"cell_type":"code","source":["# It looks like our dataframe has 891 rows and 16 columns - Always (Rows, Columns) \n","# just like in Linear Algebra matrices are designated with the row number first \n","# and the column number second. RxC. I always think of RC cars as a mnemonic device.\n","df.shape\n","# if a jupyter notebook cell gets something returned inside of it, it will just print it out. \n","# This is why we don't need a print() statement around df.shape"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(891, 16)"]},"metadata":{"tags":[]},"execution_count":21}]},{"metadata":{"id":"SF_8hG_8VWR3","colab_type":"text"},"cell_type":"markdown","source":["## The .dtypes attribute\n","\n","Each column in a dataframe has a specific data type that all pieces of data in that column conform to. We can print out all of the datatypes using the .dtypes attribute. You'll notice that text columns or \"strings\" are typically represented by the \"object\" datatype."]},{"metadata":{"id":"sj1uXzeFVeQv","colab_type":"code","outputId":"11e3661e-0f4a-4fe4-a601-c824d19d04b1","executionInfo":{"status":"ok","timestamp":1550018166670,"user_tz":420,"elapsed":363,"user":{"displayName":"Ryan Allred","photoUrl":"","userId":"04031804316926795705"}},"colab":{"base_uri":"https://localhost:8080/","height":302}},"cell_type":"code","source":["df.dtypes"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Unnamed: 0       int64\n","survived         int64\n","pclass           int64\n","sex             object\n","age            float64\n","sibsp            int64\n","parch            int64\n","fare           float64\n","embarked        object\n","class           object\n","who             object\n","adult_male        bool\n","deck            object\n","embark_town     object\n","alive           object\n","alone             bool\n","dtype: object"]},"metadata":{"tags":[]},"execution_count":22}]},{"metadata":{"id":"0f8sVhqhUb0u","colab_type":"text"},"cell_type":"markdown","source":["## The .describe() function\n","\n","The .describe() function will give us summary statistics for all of our numeric columns (features). You'll notice that the classes with the datatype \"object\" are not present in the .describe() output.\n","\n"]},{"metadata":{"id":"FmTq_qB2Ug4J","colab_type":"code","outputId":"01d87cf4-5caf-4913-952d-7fd829473bd1","executionInfo":{"status":"ok","timestamp":1550018169992,"user_tz":420,"elapsed":430,"user":{"displayName":"Ryan Allred","photoUrl":"","userId":"04031804316926795705"}},"colab":{"base_uri":"https://localhost:8080/","height":284}},"cell_type":"code","source":["df.describe()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>survived</th>\n","      <th>pclass</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>714.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>445.000000</td>\n","      <td>0.383838</td>\n","      <td>2.308642</td>\n","      <td>29.699118</td>\n","      <td>0.523008</td>\n","      <td>0.381594</td>\n","      <td>32.204208</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>257.353842</td>\n","      <td>0.486592</td>\n","      <td>0.836071</td>\n","      <td>14.526497</td>\n","      <td>1.102743</td>\n","      <td>0.806057</td>\n","      <td>49.693429</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.420000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>222.500000</td>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","      <td>20.125000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>7.910400</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>445.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>28.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>14.454200</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>667.500000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>38.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>31.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>890.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>80.000000</td>\n","      <td>8.000000</td>\n","      <td>6.000000</td>\n","      <td>512.329200</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       Unnamed: 0    survived      pclass         age       sibsp       parch  \\\n","count  891.000000  891.000000  891.000000  714.000000  891.000000  891.000000   \n","mean   445.000000    0.383838    2.308642   29.699118    0.523008    0.381594   \n","std    257.353842    0.486592    0.836071   14.526497    1.102743    0.806057   \n","min      0.000000    0.000000    1.000000    0.420000    0.000000    0.000000   \n","25%    222.500000    0.000000    2.000000   20.125000    0.000000    0.000000   \n","50%    445.000000    0.000000    3.000000   28.000000    0.000000    0.000000   \n","75%    667.500000    1.000000    3.000000   38.000000    1.000000    0.000000   \n","max    890.000000    1.000000    3.000000   80.000000    8.000000    6.000000   \n","\n","             fare  \n","count  891.000000  \n","mean    32.204208  \n","std     49.693429  \n","min      0.000000  \n","25%      7.910400  \n","50%     14.454200  \n","75%     31.000000  \n","max    512.329200  "]},"metadata":{"tags":[]},"execution_count":23}]},{"metadata":{"id":"OJr11Lc-W1ep","colab_type":"text"},"cell_type":"markdown","source":["# Cleaning the data\n","\n","Lets look at the .head() output again and inspect the rows a little more carefully. You'll see that there are lots of \"NaN\" values. NaN stands for Not-a-Number, and is Pandas' default missing value indicator. They are commonly referred to as \"NA\" values as well. The presence of those little buggers means that those cells were empty in our CSV when we read it in. We have some missing data."]},{"metadata":{"id":"zv5GOhhyXLCu","colab_type":"code","outputId":"a7795ab3-becb-4ec8-b02c-0e08c94fd1d5","executionInfo":{"status":"ok","timestamp":1550018172916,"user_tz":420,"elapsed":377,"user":{"displayName":"Ryan Allred","photoUrl":"","userId":"04031804316926795705"}},"colab":{"base_uri":"https://localhost:8080/","height":380}},"cell_type":"code","source":["# You will see a lot of NaN values if you look at the deck column\n","df.head(10)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>survived</th>\n","      <th>pclass</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","      <th>embarked</th>\n","      <th>class</th>\n","      <th>who</th>\n","      <th>adult_male</th>\n","      <th>deck</th>\n","      <th>embark_town</th>\n","      <th>alive</th>\n","      <th>alone</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>C</td>\n","      <td>First</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>C</td>\n","      <td>Cherbourg</td>\n","      <td>yes</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>S</td>\n","      <td>First</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>C</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.4583</td>\n","      <td>Q</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Queenstown</td>\n","      <td>no</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>male</td>\n","      <td>54.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>51.8625</td>\n","      <td>S</td>\n","      <td>First</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>E</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>2.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>21.0750</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>child</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>11.1333</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>female</td>\n","      <td>14.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>30.0708</td>\n","      <td>C</td>\n","      <td>Second</td>\n","      <td>child</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>Cherbourg</td>\n","      <td>yes</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Unnamed: 0  survived  pclass     sex   age  sibsp  parch     fare embarked  \\\n","0           0         0       3    male  22.0      1      0   7.2500        S   \n","1           1         1       1  female  38.0      1      0  71.2833        C   \n","2           2         1       3  female  26.0      0      0   7.9250        S   \n","3           3         1       1  female  35.0      1      0  53.1000        S   \n","4           4         0       3    male  35.0      0      0   8.0500        S   \n","5           5         0       3    male   NaN      0      0   8.4583        Q   \n","6           6         0       1    male  54.0      0      0  51.8625        S   \n","7           7         0       3    male   2.0      3      1  21.0750        S   \n","8           8         1       3  female  27.0      0      2  11.1333        S   \n","9           9         1       2  female  14.0      1      0  30.0708        C   \n","\n","    class    who  adult_male deck  embark_town alive  alone  \n","0   Third    man        True  NaN  Southampton    no  False  \n","1   First  woman       False    C    Cherbourg   yes  False  \n","2   Third  woman       False  NaN  Southampton   yes   True  \n","3   First  woman       False    C  Southampton   yes  False  \n","4   Third    man        True  NaN  Southampton    no   True  \n","5   Third    man        True  NaN   Queenstown    no   True  \n","6   First    man        True    E  Southampton    no   True  \n","7   Third  child       False  NaN  Southampton    no  False  \n","8   Third  woman       False  NaN  Southampton   yes  False  \n","9  Second  child       False  NaN    Cherbourg   yes  False  "]},"metadata":{"tags":[]},"execution_count":24}]},{"metadata":{"id":"aY8aTp5gXbtt","colab_type":"text"},"cell_type":"markdown","source":["# Dealing with Missing Data\n","\n","## Counting NaN Values - Google It!\n","\n","So you have some missing data, but how much? Lets figure it out.\n","\n","First look at the [Pandas Documentation](http://pandas.pydata.org/pandas-docs/stable/) and see if you can find any functionality that would help us figure out how much data is missing.\n","\n","You might also try googling some pretty specific phrases like:\n","\n","[How to tell how many NaN values are in a pandas dataframe](https://www.google.com/search?q=How+to+tell+how+many+NaN+values+are+in+a+pandas+dataframe&oq=How+to+tell+how+many+NaN+values+are+in+a+pandas+dataframe&aqs=chrome..69i57.1239j0j7&sourceid=chrome&ie=UTF-8)\n","\n","or the more generic\n","\n","[How to deal with missing data pandas python](https://www.google.com/search?ei=RQJ8W9CMO8G_jwSu76eADA&q=How+to+deal+with+missing+data+pandas+python&oq=How+to+deal+with+missing+data+pandas+python&gs_l=psy-ab.3...42955.50917.0.51745.0.0.0.0.0.0.0.0..0.0....0...1c.2.64.psy-ab..0.0.0....0.xeeJ6KnlQgM)"]},{"metadata":{"id":"8kynTlhQal3L","colab_type":"text"},"cell_type":"markdown","source":["## Dataframe Operations vs Column Operations\n","\n","Up until this point we have been doing operations on the entire dataframe, but we can access specific dataframe columns in two different ways. We can use \"dot syntax\" as if the column was an attribute on a class. Or we can use square brackets with the name of the column passed in as a string. I'll demonstrate both so that you can see what I mean. We'll look at the deck column since it has a lot of NaNs."]},{"metadata":{"id":"NKvCmrcbXzCT","colab_type":"code","outputId":"4acfd0e3-d483-42ff-f771-5ddb8ec86eb7","executionInfo":{"status":"ok","timestamp":1550018176621,"user_tz":420,"elapsed":412,"user":{"displayName":"Ryan Allred","photoUrl":"","userId":"04031804316926795705"}},"colab":{"base_uri":"https://localhost:8080/","height":1058}},"cell_type":"code","source":["# Access the deck column using dot notation\n","df.deck"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      NaN\n","1        C\n","2      NaN\n","3        C\n","4      NaN\n","5      NaN\n","6        E\n","7      NaN\n","8      NaN\n","9      NaN\n","10       G\n","11       C\n","12     NaN\n","13     NaN\n","14     NaN\n","15     NaN\n","16     NaN\n","17     NaN\n","18     NaN\n","19     NaN\n","20     NaN\n","21       D\n","22     NaN\n","23       A\n","24     NaN\n","25     NaN\n","26     NaN\n","27       C\n","28     NaN\n","29     NaN\n","      ... \n","861    NaN\n","862      D\n","863    NaN\n","864    NaN\n","865    NaN\n","866    NaN\n","867      A\n","868    NaN\n","869    NaN\n","870    NaN\n","871      D\n","872      B\n","873    NaN\n","874    NaN\n","875    NaN\n","876    NaN\n","877    NaN\n","878    NaN\n","879      C\n","880    NaN\n","881    NaN\n","882    NaN\n","883    NaN\n","884    NaN\n","885    NaN\n","886    NaN\n","887      B\n","888    NaN\n","889      C\n","890    NaN\n","Name: deck, Length: 891, dtype: object"]},"metadata":{"tags":[]},"execution_count":25}]},{"metadata":{"id":"RbM0MPGAX8AD","colab_type":"code","outputId":"f4565468-76cf-47fd-8462-9f3d067a37f7","executionInfo":{"status":"ok","timestamp":1550018179081,"user_tz":420,"elapsed":431,"user":{"displayName":"Ryan Allred","photoUrl":"","userId":"04031804316926795705"}},"colab":{"base_uri":"https://localhost:8080/","height":1058}},"cell_type":"code","source":["# Access the deck column using square brackets with the column name as a string \n","# (wrapped in single or double quotes).\n","df['deck']"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      NaN\n","1        C\n","2      NaN\n","3        C\n","4      NaN\n","5      NaN\n","6        E\n","7      NaN\n","8      NaN\n","9      NaN\n","10       G\n","11       C\n","12     NaN\n","13     NaN\n","14     NaN\n","15     NaN\n","16     NaN\n","17     NaN\n","18     NaN\n","19     NaN\n","20     NaN\n","21       D\n","22     NaN\n","23       A\n","24     NaN\n","25     NaN\n","26     NaN\n","27       C\n","28     NaN\n","29     NaN\n","      ... \n","861    NaN\n","862      D\n","863    NaN\n","864    NaN\n","865    NaN\n","866    NaN\n","867      A\n","868    NaN\n","869    NaN\n","870    NaN\n","871      D\n","872      B\n","873    NaN\n","874    NaN\n","875    NaN\n","876    NaN\n","877    NaN\n","878    NaN\n","879      C\n","880    NaN\n","881    NaN\n","882    NaN\n","883    NaN\n","884    NaN\n","885    NaN\n","886    NaN\n","887      B\n","888    NaN\n","889      C\n","890    NaN\n","Name: deck, Length: 891, dtype: object"]},"metadata":{"tags":[]},"execution_count":26}]},{"metadata":{"id":"LiCfjOf8YCP1","colab_type":"text"},"cell_type":"markdown","source":["See how the output for the above two sections is the same? \"Pythonic\" code usually gives you one clear way of doing things, but this is not one of those cases. There are two equally acceptable ways of accessing the columns of a dataframe. There are certain situations where you might prefer one over the other, but we won't go into that right now. You'll see both of these syntaxes used quite often, so get used to them! I'll switch back and forth to give you practice."]},{"metadata":{"id":"oBT3f3rLY2N7","colab_type":"text"},"cell_type":"markdown","source":["## Counting NaN values\n","\n","If you want to get an idea for how much data is missing, you've got to get a count of the NaN values somehow. Just as we have explored attributes and functions of a dataframe, dataframe columns also come with their own functions. \n"]},{"metadata":{"id":"bK_jVuPtbXN9","colab_type":"code","outputId":"411d109c-f8ad-4b04-bec2-15bc4ae3ba73","executionInfo":{"status":"ok","timestamp":1550018182612,"user_tz":420,"elapsed":373,"user":{"displayName":"Ryan Allred","photoUrl":"","userId":"04031804316926795705"}},"colab":{"base_uri":"https://localhost:8080/","height":1918}},"cell_type":"code","source":["# Check for NaN values in the whole dataframe\n","df.isnull()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>survived</th>\n","      <th>pclass</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","      <th>embarked</th>\n","      <th>class</th>\n","      <th>who</th>\n","      <th>adult_male</th>\n","      <th>deck</th>\n","      <th>embark_town</th>\n","      <th>alive</th>\n","      <th>alone</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>861</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>862</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>863</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>864</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>865</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>866</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>867</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>868</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>869</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>870</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>871</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>872</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>873</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>874</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>875</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>876</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>877</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>878</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>879</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>880</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>881</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>882</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>883</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>884</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>885</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>886</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>887</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>888</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>889</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>890</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>891 rows × 16 columns</p>\n","</div>"],"text/plain":["     Unnamed: 0  survived  pclass    sex    age  sibsp  parch   fare  \\\n","0         False     False   False  False  False  False  False  False   \n","1         False     False   False  False  False  False  False  False   \n","2         False     False   False  False  False  False  False  False   \n","3         False     False   False  False  False  False  False  False   \n","4         False     False   False  False  False  False  False  False   \n","5         False     False   False  False   True  False  False  False   \n","6         False     False   False  False  False  False  False  False   \n","7         False     False   False  False  False  False  False  False   \n","8         False     False   False  False  False  False  False  False   \n","9         False     False   False  False  False  False  False  False   \n","10        False     False   False  False  False  False  False  False   \n","11        False     False   False  False  False  False  False  False   \n","12        False     False   False  False  False  False  False  False   \n","13        False     False   False  False  False  False  False  False   \n","14        False     False   False  False  False  False  False  False   \n","15        False     False   False  False  False  False  False  False   \n","16        False     False   False  False  False  False  False  False   \n","17        False     False   False  False   True  False  False  False   \n","18        False     False   False  False  False  False  False  False   \n","19        False     False   False  False   True  False  False  False   \n","20        False     False   False  False  False  False  False  False   \n","21        False     False   False  False  False  False  False  False   \n","22        False     False   False  False  False  False  False  False   \n","23        False     False   False  False  False  False  False  False   \n","24        False     False   False  False  False  False  False  False   \n","25        False     False   False  False  False  False  False  False   \n","26        False     False   False  False   True  False  False  False   \n","27        False     False   False  False  False  False  False  False   \n","28        False     False   False  False   True  False  False  False   \n","29        False     False   False  False   True  False  False  False   \n","..          ...       ...     ...    ...    ...    ...    ...    ...   \n","861       False     False   False  False  False  False  False  False   \n","862       False     False   False  False  False  False  False  False   \n","863       False     False   False  False   True  False  False  False   \n","864       False     False   False  False  False  False  False  False   \n","865       False     False   False  False  False  False  False  False   \n","866       False     False   False  False  False  False  False  False   \n","867       False     False   False  False  False  False  False  False   \n","868       False     False   False  False   True  False  False  False   \n","869       False     False   False  False  False  False  False  False   \n","870       False     False   False  False  False  False  False  False   \n","871       False     False   False  False  False  False  False  False   \n","872       False     False   False  False  False  False  False  False   \n","873       False     False   False  False  False  False  False  False   \n","874       False     False   False  False  False  False  False  False   \n","875       False     False   False  False  False  False  False  False   \n","876       False     False   False  False  False  False  False  False   \n","877       False     False   False  False  False  False  False  False   \n","878       False     False   False  False   True  False  False  False   \n","879       False     False   False  False  False  False  False  False   \n","880       False     False   False  False  False  False  False  False   \n","881       False     False   False  False  False  False  False  False   \n","882       False     False   False  False  False  False  False  False   \n","883       False     False   False  False  False  False  False  False   \n","884       False     False   False  False  False  False  False  False   \n","885       False     False   False  False  False  False  False  False   \n","886       False     False   False  False  False  False  False  False   \n","887       False     False   False  False  False  False  False  False   \n","888       False     False   False  False   True  False  False  False   \n","889       False     False   False  False  False  False  False  False   \n","890       False     False   False  False  False  False  False  False   \n","\n","     embarked  class    who  adult_male   deck  embark_town  alive  alone  \n","0       False  False  False       False   True        False  False  False  \n","1       False  False  False       False  False        False  False  False  \n","2       False  False  False       False   True        False  False  False  \n","3       False  False  False       False  False        False  False  False  \n","4       False  False  False       False   True        False  False  False  \n","5       False  False  False       False   True        False  False  False  \n","6       False  False  False       False  False        False  False  False  \n","7       False  False  False       False   True        False  False  False  \n","8       False  False  False       False   True        False  False  False  \n","9       False  False  False       False   True        False  False  False  \n","10      False  False  False       False  False        False  False  False  \n","11      False  False  False       False  False        False  False  False  \n","12      False  False  False       False   True        False  False  False  \n","13      False  False  False       False   True        False  False  False  \n","14      False  False  False       False   True        False  False  False  \n","15      False  False  False       False   True        False  False  False  \n","16      False  False  False       False   True        False  False  False  \n","17      False  False  False       False   True        False  False  False  \n","18      False  False  False       False   True        False  False  False  \n","19      False  False  False       False   True        False  False  False  \n","20      False  False  False       False   True        False  False  False  \n","21      False  False  False       False  False        False  False  False  \n","22      False  False  False       False   True        False  False  False  \n","23      False  False  False       False  False        False  False  False  \n","24      False  False  False       False   True        False  False  False  \n","25      False  False  False       False   True        False  False  False  \n","26      False  False  False       False   True        False  False  False  \n","27      False  False  False       False  False        False  False  False  \n","28      False  False  False       False   True        False  False  False  \n","29      False  False  False       False   True        False  False  False  \n","..        ...    ...    ...         ...    ...          ...    ...    ...  \n","861     False  False  False       False   True        False  False  False  \n","862     False  False  False       False  False        False  False  False  \n","863     False  False  False       False   True        False  False  False  \n","864     False  False  False       False   True        False  False  False  \n","865     False  False  False       False   True        False  False  False  \n","866     False  False  False       False   True        False  False  False  \n","867     False  False  False       False  False        False  False  False  \n","868     False  False  False       False   True        False  False  False  \n","869     False  False  False       False   True        False  False  False  \n","870     False  False  False       False   True        False  False  False  \n","871     False  False  False       False  False        False  False  False  \n","872     False  False  False       False  False        False  False  False  \n","873     False  False  False       False   True        False  False  False  \n","874     False  False  False       False   True        False  False  False  \n","875     False  False  False       False   True        False  False  False  \n","876     False  False  False       False   True        False  False  False  \n","877     False  False  False       False   True        False  False  False  \n","878     False  False  False       False   True        False  False  False  \n","879     False  False  False       False  False        False  False  False  \n","880     False  False  False       False   True        False  False  False  \n","881     False  False  False       False   True        False  False  False  \n","882     False  False  False       False   True        False  False  False  \n","883     False  False  False       False   True        False  False  False  \n","884     False  False  False       False   True        False  False  False  \n","885     False  False  False       False   True        False  False  False  \n","886     False  False  False       False   True        False  False  False  \n","887     False  False  False       False  False        False  False  False  \n","888     False  False  False       False   True        False  False  False  \n","889     False  False  False       False  False        False  False  False  \n","890     False  False  False       False   True        False  False  False  \n","\n","[891 rows x 16 columns]"]},"metadata":{"tags":[]},"execution_count":27}]},{"metadata":{"id":"Q7UB1J8ucBJH","colab_type":"code","colab":{}},"cell_type":"code","source":["# Sum up the number of True values by column in the entire dataframe\n","df.isnull().sum()"],"execution_count":0,"outputs":[]},{"metadata":{"id":"FfSA_aMXcVBG","colab_type":"text"},"cell_type":"markdown","source":["## Look at NaN values in a specific column\n"]},{"metadata":{"id":"Fx9v8ohacUTx","colab_type":"code","outputId":"c4f1d6e6-d321-49e8-ca8b-016dbeded333","executionInfo":{"status":"ok","timestamp":1550018188395,"user_tz":420,"elapsed":430,"user":{"displayName":"Ryan Allred","photoUrl":"","userId":"04031804316926795705"}},"colab":{"base_uri":"https://localhost:8080/","height":1058}},"cell_type":"code","source":["# Print out null values of the deck column\n","df['deck'].isnull()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       True\n","1      False\n","2       True\n","3      False\n","4       True\n","5       True\n","6      False\n","7       True\n","8       True\n","9       True\n","10     False\n","11     False\n","12      True\n","13      True\n","14      True\n","15      True\n","16      True\n","17      True\n","18      True\n","19      True\n","20      True\n","21     False\n","22      True\n","23     False\n","24      True\n","25      True\n","26      True\n","27     False\n","28      True\n","29      True\n","       ...  \n","861     True\n","862    False\n","863     True\n","864     True\n","865     True\n","866     True\n","867    False\n","868     True\n","869     True\n","870     True\n","871    False\n","872    False\n","873     True\n","874     True\n","875     True\n","876     True\n","877     True\n","878     True\n","879    False\n","880     True\n","881     True\n","882     True\n","883     True\n","884     True\n","885     True\n","886     True\n","887    False\n","888     True\n","889    False\n","890     True\n","Name: deck, Length: 891, dtype: bool"]},"metadata":{"tags":[]},"execution_count":28}]},{"metadata":{"id":"T6P7Nja4chnC","colab_type":"code","outputId":"22e29feb-6da5-4d03-f37f-c68f69a14f9a","executionInfo":{"status":"ok","timestamp":1550018189756,"user_tz":420,"elapsed":366,"user":{"displayName":"Ryan Allred","photoUrl":"","userId":"04031804316926795705"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"cell_type":"code","source":["# Print out sum of all null values of the deck column\n","df['deck'].isnull().sum()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["688"]},"metadata":{"tags":[]},"execution_count":29}]},{"metadata":{"id":"VSuGBMUwc2Dz","colab_type":"text"},"cell_type":"markdown","source":["# Cleaning Missing Values\n","\n","Why do we care if there are missing values? Well, some predictive models will break if there is any missing data in the dataset. So how are we going to deal with this?\n","\n","Our options are basically: \n","\n","**1) Fill in the missing data with something sensible**\n","\n","or \n","\n","**2) Get rid of the missing data** - It's not missing if it doesn't exist. :)\n","\n","If you'll recall the embarked and embark_town features (columns) only had two missing values. If we were to fill these in even with completely arbitrary values it wouldn't damage the predictive power of our data very much. What pandas functions can we use to fill in NA values?\n","\n","GOOGLE IT AGAIN!\n","\n"]},{"metadata":{"id":"Ent7bikWd-9j","colab_type":"text"},"cell_type":"markdown","source":["## .fillna() - Data Imputation\n","\n","the [.fillna()](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.fillna.html) function can help us fill NA (NaN) values with different measures of center like the mean, or median of a column (if the column is numeric). Or we can use a \"forward-fill\" or \"backwards-fill\" technique to simply force missing cells to have the same value as the closest before/after cell that contains an actual value. \n","\n","At this step in the process we probably won't be able to go back in time and obtain the true data, the best that we can do is to try and fill in the missing values using a process that will hopefully be better than random.\n","\n","Lets use a forward-fill technique on the embarked and embarked_town columns to address the two missing values there."]},{"metadata":{"id":"MiEiA4aAezli","colab_type":"code","colab":{}},"cell_type":"code","source":["# Forward Fill the embark and embark_town columns\n","\n","df.head()\n","df['embarked'] = df['embarked'].fillna(method='ffill')\n","df['embark_town'] = df['embark_town'].fillna(method='ffill')"],"execution_count":0,"outputs":[]},{"metadata":{"id":"vqEDD4dmfpzr","colab_type":"text"},"cell_type":"markdown","source":["Lets count up the NaN values in those columns again to make sure that we've been successful."]},{"metadata":{"id":"GjsgEYj-fyt7","colab_type":"code","outputId":"3583a41a-93c8-45a0-cf3d-8c81648e8591","executionInfo":{"status":"ok","timestamp":1550018195021,"user_tz":420,"elapsed":365,"user":{"displayName":"Ryan Allred","photoUrl":"","userId":"04031804316926795705"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"cell_type":"code","source":["df['embarked'].isnull().sum()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{"tags":[]},"execution_count":31}]},{"metadata":{"id":"xMUrzVZRgShS","colab_type":"code","outputId":"c15b9325-a7d7-4729-b689-14643c8e1f1f","executionInfo":{"status":"ok","timestamp":1550018197191,"user_tz":420,"elapsed":356,"user":{"displayName":"Ryan Allred","photoUrl":"","userId":"04031804316926795705"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"cell_type":"code","source":["df['embark_town'].isnull().sum()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{"tags":[]},"execution_count":32}]},{"metadata":{"id":"FIqmhtaziWgA","colab_type":"text"},"cell_type":"markdown","source":["We can fill in the missing age values with the median age.\n","\n"]},{"metadata":{"id":"F4Z78zVdig3g","colab_type":"code","outputId":"8595e996-f172-4664-9157-27435b6f1d38","executionInfo":{"status":"ok","timestamp":1550018199533,"user_tz":420,"elapsed":380,"user":{"displayName":"Ryan Allred","photoUrl":"","userId":"04031804316926795705"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"cell_type":"code","source":["# Fill missing age values with the median age.\n","\n","median_age = df.age.median()\n","print(\"median age:\", median_age)\n","\n","df.age = df.age.fillna(median_age)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["median age: 28.0\n"],"name":"stdout"}]},{"metadata":{"id":"ZnMcLl2piwKr","colab_type":"code","outputId":"32273fc8-3eff-4042-b334-3494a28f5270","executionInfo":{"status":"ok","timestamp":1550018201094,"user_tz":420,"elapsed":408,"user":{"displayName":"Ryan Allred","photoUrl":"","userId":"04031804316926795705"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"cell_type":"code","source":["df.age.isnull().sum()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{"tags":[]},"execution_count":34}]},{"metadata":{"id":"fRbeaJxRgRsu","colab_type":"text"},"cell_type":"markdown","source":["## Dropping \"bad\" data\n","\n","Sometimes there's so much missing data that it doesn't seem appropriate or cost effective to try and deal with it in a sensible way. Dropping features or rows is a respectable choice if done carefully. Since we have so many features missing in our deck column, we're just going to drop it entirely.\n","\n","[Google Search: drop column dataframe pandas](drop column dataframe pandas)\n","\n","## .drop()\n","\n","the .drop() function can help us drop certain rows or columns. However, unless specified, it will try and drop rows from the dataset. If we want to drop columns then we have to specify the parameter axis=1. This tells Pandas that we want to drop a column and not a row."]},{"metadata":{"id":"yCskgppDiK-y","colab_type":"code","outputId":"95f26094-7f03-4408-a9dc-9c1fd01384d7","executionInfo":{"status":"ok","timestamp":1550018203869,"user_tz":420,"elapsed":366,"user":{"displayName":"Ryan Allred","photoUrl":"","userId":"04031804316926795705"}},"colab":{"base_uri":"https://localhost:8080/","height":195}},"cell_type":"code","source":["# Drop the deck Column\n","df = df.drop('deck', axis=1)\n","df.head()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>survived</th>\n","      <th>pclass</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","      <th>embarked</th>\n","      <th>class</th>\n","      <th>who</th>\n","      <th>adult_male</th>\n","      <th>embark_town</th>\n","      <th>alive</th>\n","      <th>alone</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>C</td>\n","      <td>First</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>Cherbourg</td>\n","      <td>yes</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>S</td>\n","      <td>First</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Unnamed: 0  survived  pclass     sex   age  sibsp  parch     fare embarked  \\\n","0           0         0       3    male  22.0      1      0   7.2500        S   \n","1           1         1       1  female  38.0      1      0  71.2833        C   \n","2           2         1       3  female  26.0      0      0   7.9250        S   \n","3           3         1       1  female  35.0      1      0  53.1000        S   \n","4           4         0       3    male  35.0      0      0   8.0500        S   \n","\n","   class    who  adult_male  embark_town alive  alone  \n","0  Third    man        True  Southampton    no  False  \n","1  First  woman       False    Cherbourg   yes  False  \n","2  Third  woman       False  Southampton   yes   True  \n","3  First  woman       False  Southampton   yes  False  \n","4  Third    man        True  Southampton    no   True  "]},"metadata":{"tags":[]},"execution_count":35}]},{"metadata":{"id":"U8beToHciRU3","colab_type":"code","outputId":"0f963f44-c3ce-404e-9bbf-65a7d5db34f1","executionInfo":{"status":"ok","timestamp":1550018205332,"user_tz":420,"elapsed":343,"user":{"displayName":"Ryan Allred","photoUrl":"","userId":"04031804316926795705"}},"colab":{"base_uri":"https://localhost:8080/","height":286}},"cell_type":"code","source":["#Check for missing values again.\n","df.isnull().sum()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Unnamed: 0     0\n","survived       0\n","pclass         0\n","sex            0\n","age            0\n","sibsp          0\n","parch          0\n","fare           0\n","embarked       0\n","class          0\n","who            0\n","adult_male     0\n","embark_town    0\n","alive          0\n","alone          0\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":36}]},{"metadata":{"id":"h9rRH1CejDrG","colab_type":"text"},"cell_type":"markdown","source":["Our data is now clean of any missing values. Now that we've got those pesky NaNs out of the way, lets visualize our data."]},{"metadata":{"id":"UBT1a5ZX_eRr","colab_type":"text"},"cell_type":"markdown","source":["# Intro to Matplotlib\n","\n","Matplotlib is a popular library that is used to create graphs and other insightful visualizations. Today we're just going to focus on one core graph: the scatterplot.\n","\n","All matplotlib scatterplots begin with creating a plot object and passing it the x and y values that we want to plot.\n","\n","We call .show() to tell our graph to display."]},{"metadata":{"id":"k2BBYcdk-cdd","colab_type":"code","outputId":"d922db08-969c-499d-83a3-e503bb6895db","executionInfo":{"status":"ok","timestamp":1550018211710,"user_tz":420,"elapsed":610,"user":{"displayName":"Ryan Allred","photoUrl":"","userId":"04031804316926795705"}},"colab":{"base_uri":"https://localhost:8080/","height":347}},"cell_type":"code","source":["# Alias matplotlib's pyplot module as plt.\n","import matplotlib.pyplot as plt\n","\n","plt.scatter(df['fare'], df['age'])\n","plt.show()"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAd8AAAFKCAYAAABcq1WoAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4yLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvOIA7rQAAIABJREFUeJzt3X14G/WZN/qv3kayLflFshwSJ2nI\ni5OUJMQmUAgYyEvhhG57UloI+ALKsqXbQ+nDnqsUWODipS1tgW4uKNtTui3wLN2lpBu6LPtsd5MN\nSXhScAKJAyE8kGBCSew4sWzLtmRJI1nS+UORItszoxm9j/z9/NPakmZ+83Pwz3P/5r5vQzwej4OI\niIiKxljqARAREU03XHyJiIiKjIsvERFRkXHxJSIiKjIuvkREREXGxZeIiKjIzMU4icfjy/sxGxqq\n4fUG8n7c6YBzlz3OXfY4d7nh/GWvVHPndjtkX9Ptna/ZbCr1EHSLc5c9zl32OHe54fxlrxznTreL\nLxERkV5x8SUiIioyLr5ERERFxsWXiIioyLj4EhERFRkXXyIioiLj4ktERFRkXHwliJEo+r0BiJFo\nqYdCREQVKGOFq7GxMdx7770YGRlBJBLBd77zHbjdbjzyyCMAgMWLF+PRRx8t9DiLIhqLYcvObhw8\n6sHQqAhnrRWtLW5sWrsQJiP/TiEiovzIuPj+67/+K84991x873vfw+nTp/GNb3wDbrcb999/P1as\nWIHvfe97eOONN3DFFVcUY7wFtWVnN3bs70l9PTgqpr7uWN9SqmEREVGFyXg719DQgOHhYQDA6Ogo\n6uvr0dvbixUrVgAA1qxZg87OzsKOsgjESBQHj3okXzt4dIAhaCIiypuMd75f+tKX8Ic//AFf/OIX\nMTo6il/+8pf4wQ9+kHrd5XLB45FetJIaGqoLUltTqWi1Vn0DYxjyiZKveX0hmAQL3I01eTtfqeVz\n7qYbzl32OHe54fxlr9zmLuPi+2//9m+YNWsWnnvuOXz00Uf4zne+A4fj7EXE4/GMJylENwm325HX\nbknRSBROhxWDo1MX4AaHDdFwpCDdmUoh33M3nXDusse5yw3nL3ulmrucuhp1dXXhsssuAwAsWbIE\noijC6/WmXj99+jSampryMMzSslpMaG1xS77W2tIIq6X8umIQEZE+ZVx8P/e5z+G9994DAPT29qKm\npgYLFizA/v37AQDbt29He3t7YUdZJJvWLsT6VbPhqrXBaABctTasXzUbm9YuLPXQiIiogmQMO2/a\ntAn3338/brrpJoyPj+ORRx6B2+3GQw89hFgshvPPPx+rV68uxlgLzmQ0omN9C752xQKM+EXU2a28\n4yUiorzLuPjW1NTg6aefnvL9l156qSADKgdWiwlNDdWlHgYREVUoVo4gIiIqMi6+RERERcbFl4iI\nqMi4+BIRERUZF18iIqIi4+JLRERUZFx8iYiIioyLLxERUZFx8SUiIioyLr5ERERFxsWXiIioyCpq\n8RUjUfR7AxAj0VIPhYiISFbGxgp6EI3FsGVnNw4e9WBoVISz1orWFjc2rV0Ik7Gi/r4gIqIKUBGL\n75ad3dixvyf19eComPq6Y31LqYZFREQkSfe3hWIkioNHPZKvHTw6wBA0ERGVHd0vviN+EUOjouRr\nXl8II37p14iIiEpF94tvnd0KZ61V8rUGhw11dunXiIiISkX3i6/VYkJri1vytdaWRlgtpiKPiIiI\nSFlFPHC1ae1CAIk9Xq8vhAaHDa0tjanvExERlZOKWHxNRiM61rfga1cswIhfRJ3dyjteIiIqWxWx\n+CZZLSY0NVSXehhERESKdL/nW2haq2axyhYREWVSUXe++aS1aharbBERkVoVtfiKkWje9ny1Vs1i\nlS0iIlKrIhbffN91Zqqa9bUrFkxY3LW+n4iIpreMi++//Mu/4LXXXkt9ffjwYfzud7/DI488AgBY\nvHgxHn300YINUA25u85oNIabr16i+XhqqmalP9il9f2Z5PMOnoiIyk/Gxfe6667DddddBwB4++23\n8Z//+Z947LHHcP/992PFihX43ve+hzfeeANXXHFFwQcrRemu8413TwIGAzrWL9J0B5ysmjUosaBK\nVc3S+n453DcmIpoeNP1G/8UvfoHbb78dvb29WLFiBQBgzZo16OzsLMjg1FC664zFgV1dvdiys1vT\nMbVWzcpXla3kHfzgqIg4zt7Bax0/ERGVN9WL76FDhzBz5kyYTCbU1tamvu9yueDxSN95FoNSbeek\nbLobbVq7EOtXzYar1gajAXDV2rB+1WzZqlla3z8ZuzMREU0fqh+42rp1K7761a9O+X48Hs/42YaG\napjN+d+7dLsdAIBLz2/Ga3uOyb7P6wvBJFjgbqzRdPy7brwAofA4vKMiGmqtsAnK06X1/en6BsYw\n5JPfN85m/EqSc0face6yx7nLDecve+U2d6pXh3379uHBBx+EwWDA8PBw6vunT59GU1OT4me93kD2\nI5Thdjvg8fgAAF++ZC58/hDeePckYhJ/CzQ4bIiGI6n3a2UG4BsJQu2ntb4fAKKRKJwO+X3jXMY/\nWfrckTacu+xx7nLD+cteqeZOacFXFXY+ffo0ampqIAgCLBYL5s+fj/379wMAtm/fjvb29vyMNEsm\noxE3X70EV7Q2S76uh+5G7M5ERDR9qLrz9Xg8cDqdqa/vv/9+PPTQQ4jFYjj//POxevXqgg1Qi8RT\nzQbddjdidyYiounBEFezaZujQtzuK4UR9J4nW+jxM3yVPc5d9jh3ueH8Za8cw84VUeFqMr13N9L7\n+ImISBkrNxARERUZF18iIqIi4+JLRERUZBW5+LKhPRERlbOKeuCKjQmIiEgPKmrxZUN7IiLSg4q5\nHWRjAiIi0ouKWXxH/KJkXWTgbEN7JcXeJ+a+NBHR9FURYedoLIZt75yA0QDZxgpyDe2LvU/MfWki\nIqqIxXfLzm7s6uqVfV2pMUGx94m5L01ERLq/1VLa6zUagDWts2QbExR7n5j70lQOuOVBVHq6v/Md\n8YsYktnrjQO4+qK5suHcodFQxn3ifNZYVhprIc5HlI5bHkTlQ/f/xdXZrXDWSu/nOhX2egFgx4Ee\n2deU9omzpTTWQpyPKF1yy2NwVEQcZ7c8tuzsLvXQiKYd3S++2TahFyNRHOoekD3uigXOvLfzy3as\nAEOFlBtueRCVF92HnYFEE/pYPI633j+FUDjxS8QmmBCPxxGNxSRDakohYABYv2pOwcYKJH7heX0h\nNDhsaG1plN2XZqiQ8oFbHkTlpSIWX5PRCKPBkFp4ASAUjuL1A70wGAySTxEnQ8BSe76uWhuctbaC\njbVjfQu+dsUCjPhF1Nmtine8fDqa8kHp3zu3PIiKryJunbIJqeUSAs4Hq8WEpobqjKFmhgopH0r9\n752IJqqIO99sQ2rpIeDB0RBqqwWsbHHJhoCLTem6hkYZKiRttG55EFHhVMTiqxRSEywm2KsFyc+Z\njEZ8/cr5+OgzLwwGYDQQxp/e68OnJ3144JY2CObSTo/SdRkMwLZ3TqBj/SLu/ZIqWrc8iKhwKuK3\ntlJILRSO4tU9x2Q/+9iLXejxjCF+pixlLA6c6PfjsRe7CjFUTZSuKxYHdnX1Mk2ENFOz5UFEhVUR\niy8AXHPx52A1S1+O3P6oLxBGr8cv+Zmefj+OHPeip99X0r3VTWsXYk3rLBgN0q9z75eISH90H3ZO\npuLs/6gf4nhM8j1y+749/X7JRgxAojrW4y8dBADYBCNWL5+JG9cVP8RrMhpx9UVzsfvgScnXmSZC\nRKQ/ur/zTabiDPvDsu+RS6WY3WSXvaNMFwrHsPNA6UK8rIxFRFRZdL34KqXipJNLpXBUC2h221Wf\nr+uIpyQhXqaJEBFVFlWL72uvvYavfOUruPbaa7F792709fXh5ptvRkdHB+666y6Ew/J3nYWUqUpV\ng92K9atmK6ZSPHBLG+Y02aHiBhhenwiPN1DUMo/JspIb2+djTVszGuxWGAyJQiCZro2IiMpTxj1f\nr9eLX/ziF3jllVcQCATwzDPPYNu2bejo6MCGDRuwefNmbN26FR0dHcUY7wRKqTj1dgGP3HYhHDJp\nRkkmoxGL59bDH4zA6xNhNEB2H1iwGPH01kNFKfOYXlZycFSETTACSFTxqrcLWLHAyRKTREQ6lfE3\nd2dnJy655BLY7XY0NTXhhz/8Ifbt24d169YBANasWYPOzs6CD1SKUjh21ZKmjAsvcHbP2OtLLOBy\nCy8AiJFY0TrCpHegARL7zsnymcP+MHYdPMk0IyIincq4+Pb09CAUCuHb3/42Ojo60NnZiWAwCEFI\nLGwulwseT+Z910LZtHYh1q+aDVdtMhx7NtScqROQ2j1jq8UIq6AtjSkXasfFNCMiIn1SlWo0PDyM\nv//7v8fJkydxyy23IB4/e3uY/v/lNDRUw2zO/0NBbrcD0WgM1VUCjEYD4nHAaDTAZrPg3976DG9/\ncAqe4SDc9VW4eNlM3Pbl82AynV1E+wbGMOST3jM2GoAH/+oLcNdXA4jjf/zdbsn3eX0hmAQL3I01\nebsupXHl69xutyOboRE4d7ng3OWG85e9cpu7jIuvy+VCa2srzGYz5s6di5qaGphMJoRCIdhsNpw+\nfRpNTU2Kx/B6A3kbcJLb7YDH48NLO45O6PrjGQ7hf/3p0wnv7fcG8dqeYwgEwxM6AUUjUTgd8p1e\nZtbZYDUbIEZiiu+LhiPweHx5uzalceXj3Mm5I+04d9nj3OWG85e9Us2d0oKfMex82WWXYe/evYjF\nYvB6vQgEAli9ejW2bdsGANi+fTva29vzN1oN1IZnkyaHadWm8BQ71UfpfIU+NxERFV7GO98ZM2bg\n6quvxvXXXw8AePDBB7F8+XLce++92LJlC2bNmoWNGzcWfKBSMqUaTSZVDepspxcPhnwiGhxWLJ3b\ngI3t8yd8ttgdYdLPNzQaglVILLLhSLQo3WjESLRoxfelzlXM8xMRFZshrmbTNkeFuN13ux3oOTmM\nB3+9N2N4NslVa8OPbv/ChF/myZSeAx+dhtcfgQGJ0pIumVSiYi8K6ecDkJdzK4Vg0lOcCp1SJXWu\n8xc1wgDg3Y8HipLSpRVDf9nj3OWG85e9cgw767q2czI8m77nq0QqTJtM6UlK/iWSTCUCMGGfONkR\nplgmn6/Q5548H3LzUKhz7TzQO+E9hTw/EVGplP5WIkdnU41sMJ6p/HRF60xcsmwGGuwCDACcDulK\nV2r2jKdTOo/SfOR7HnLdryci0jNd3/kCExuED42GsONADw51D2BwNFGtKnEnKx1ZV7NnPJ26BinN\nR77nIR/79UREeqX7O98kq8WEXQd7saurN7UHnKxWNeQLS1ajUuoWlDSdugYVs3uSmrkv5PmJiEqp\nYhbfbELIalJ6WlsaAaCozRTUylTBS6tiplSpTacq1PmJiEpJ92HnpGxDyF+/cj6OHB9GT79/SnDa\najHgo+NePPjrvWX15G0hn0guZkqV1LnOX+Q687TzYFFSuoiISqFiFl+lDkdJUqHLrbuP4US/X/L9\nYiSOnv6x1Nfl8uRtIZ9ITt9DL3RKldK5vn4l83yJqHJVRNg5GovhlTc+wVgoovi+yaFLrU/cJpXy\nydtiPZGcTHEqxsInda5inp+IqNgqYvFN3gmGwjHJ150OAZcuO2dK1SqtT9wmJcPXpaDmiWQiIipv\nul98le4EG+wWXPz5RNOHtw6fwsPP7cNLO44iGkss0lqfuE0dt4RP3hbziWQiIioM3S++ineC/gj2\n/p9+DPnCiOPs3mgy5UjrE7dJpXzytthNHoiIKP90v/gq3QkaDdKfSe6NipEo1rQ249IV58BRZZE9\nh9EAGM5Uz5KqlCVFLg0o2/QgMRJFT78PPR4/NrbPn1LVS+24iIio9HT/tLNSfeeYTMuIodEQ/mnb\nEXx03KuqKUM8Dtx9w0rMb67LeGcplwb09SvnY+vuY5rTg6KxGH73+sd46/2+1J62TTDh0uXn4NG/\nuhD+QIRPBBMR6YzuF19AOl+0ympCj2dM8v1WwYQ3D59SfXxnrU3VwgvIpwEdOT48IaVJbXrQlp3d\nU5oNhMJRvH6gFwaDgc0GiIh0SPdhZ+BsvuiPbv8Cfvyti/HQrasQFMdl36+1i6LavVSlh796PdK5\nxErpQWIkiq4j/bLnO3jUU3ZVt4iIKLOKWHyTkrmhQXFcMYUoHJFOSZpM616q0sNfciFwpfSgEb+I\nIV9Y9nxDPpGpRUREOlQRYefJlKpdOR1WGAxQ3Os1GoD7b7kAzY12TXupdXYrGhyC5IJpgHRvJaX0\noDq7FU6Z4wGJa2FqERGR/lTUnW+SUjpO22J3xvSiZrcd82eq2+OdfN6aKkHytZoq6b9zlELaVosJ\nbYubZM/X2uLmg1ZERDpUkXe+QOIhrHBkHAc/HoQvEIGrdmqB/oNHPRPugA0AZjfZcfeNK9HvDWh+\niliMRBGQKXFptZhw4ZImHPpkSFPDgE1rFyIWj+Ot908hFE7s7wpmA1Yvn5nxs2KE9ZGJiMpRRS6+\n4fFxPPZiF3o9fsTiiTByldWEr185P5XWk17Q32Q0oN8bxMzGGvxx72f4wQvvZNUtSLn0o4irL5qL\n69cu0rQgmoxG3LhuEWKxODrfPwVxPIbweBx7PzgFo9GAG9ctmjK2QnY9IiKi3FXkb+LHXuzCiX5/\n6iGnWBzo8YzhsRe7Jrwv+YCWq64KS+c58ce9n2HH/h4MjoqSFbEyUVP6MZuGAVt2dmP3wZMQx88+\nKBYKx7DzQK/k2JLpTtleBxERFVbFLL5iJIpPT45g7+FTsmk9vR4/fAHph5d8gTD2fySd1qO2W5Da\n0o9aqlxl6rzUdWRiulGxuh4REVH2dB92jsZi+N2Oo3jj3T5E5fJ5zojFgZ5+P5bOc074/Jad3Tjw\nkQfDfumFOZkO1NRQnXE8Ss3oswkHD42GFJ/M9p5JN0qOTU3Xo9kZr4KIiApJ94vvlp3d2Nl1UvX7\nZzfZp3xeqjRlOi3dgpQaxL+046hk9StAvsrVjgOZxjYx3UgpzYpdj4iIyoOuw85iJIoDR+RDspOZ\njICQtteaKaSblE23oMl7u9mEg8VIFIe6BxTP07Z4YroRux4REZW/jHe++/btw1133YVFixYBAFpa\nWvDNb34T99xzD6LRKNxuN5588kkIgnR+ayGN+EV4feorPEVjUB2iBYB6u4BVS5py7hYkRqI41jsi\nGz6WC2tnGt/Fy2ZIjk0p9C03vkKkJDHVqTg4z0T6oyrsfNFFF+HnP/956uu//du/RUdHBzZs2IDN\nmzdj69at6OjoKNgg5SQqSllVL8CTK0LZqy2wCqZU/mw6q8WIh25dhXq7LevxTd7jNRqky0zKhYOV\nQsiuWiu+cfUSyb1ipdC30vjylZLEVKfi4DwT6VdW/4Xu27cP69atAwCsWbMGnZ2deR2UWlaLCRcs\nVq5Wla6myjJhEXp1z6eSCy8AiJEY/rj3eE7jm5zyI/c8mFw4WDmEnLm6Vaa0pkKlJDHVqTg4z0T6\npWrx7e7uxre//W3ceOONePPNNxEMBlNhZpfLBY9H/b5rPoiRKPoGxiBGotjYPh82Qd3fEIFQJLW3\nqma/N5fUHKXjGw2JalpqGjdsWrsQ61fNhqs2UZPaVWuV/Uy+Upi6jnjQ4/Fnde1MdSoOzjORvmUM\nO8+bNw933nknNmzYgBMnTuCWW25BNHr2P2w17fkaGqphNue+FxWNxvD8v3+AvYf74BkOwl1fhWUL\nGlNN5jPx+kSYBAvcjTXoGxhTTOFJvD+Uer9WfQNjGJIJh8fiwKPfugSfP9cJm6D8I4hGY6iuEmA0\nGhCPA0ajAdVVAtyNDphMxtR7Js/Lxctm4rYvn5d6z2QmwSI7viGfiIefexvuhszH0XLducxnOXG7\nHaUegm7nuRzmTs84f9krt7nLuPjOmDED11xzDQBg7ty5aGxsxPvvv49QKASbzYbTp0+jqUm++D8A\neL2BvAx2cqpOvzeInftPwCYYVS3ADQ4bouEIPB4fopFoxs+lv1+raCQKp0N6vxYAdu8/jjnOKmQ6\n8uRr9gyH8NqeYwgEw6n0JKl5mfyedG63A9FwRHF8cRXHkaJ03bnMZ7lwux1lMX49znO5zJ1ecf6y\nV6q5U1rwM97OvPbaa3juuecAAB6PB4ODg7j22muxbds2AMD27dvR3t6ep6HKUw4TG1QdY+reqvLn\ncknNsVpMWLHAJfv6oe7BjKFBNaHFbMOPSvvJWo6j5bhMdcofzjORvmW88127di3uvvtuvP7664hE\nInjkkUewdOlS3HvvvdiyZQtmzZqFjRs3FnygSmk34UgUq5edgw//PAivf2pXIWetFW1nngJNP54o\n87AVAKxedg42rV04JY1DbVqHGImitcWNXQelC4Ak04vq7FbZ46mpVgUg43vkKnOlpyQNjYYk+w2r\nOY7ScbV0cCJtOM9E+pVx8bXb7Xj22WenfP+FF14oyIDkKKXd1NutsAomGI1GGM58bTYbEImMY3hs\nHJDYl1ZqfC9YDLhh3YIpaRzVNgvGgmF4fWHZtA616UX1diu2vXMCh7oHZNNElMZYbz+bNpVtRav0\nlCSPN4Cntx7KS2UstalOlBvOM5F+6SYZUCnMVlNlwa6u3lTKhdcvwjMcSiy8AIZ84SkpGEqN78OR\nOJ783XtT0jhO9Psx5AsrpnWoTS+aPGap4ymNMZk2lY/wo9ViwuwmR97DmNl0cCLtOM9E+qObxRdI\nT7uxwWhIpOqsaZ0l28B+svQOQGIkijGFz/X0S3dGmix9P1RtepHSmCcfT+596WlTUvOSKYVJSr6O\nQ0REynTVWCE9zGYSLIiGIxgaDcnuq0425BPx221H8JfXLEmUplRINcqcQJWQvh864hdlnx6OxYHv\n37AS85vrMOIXsTvDXnDyePL7uWe7GeUr/MgwJhFRcejqzjfJajFhZmMNrBYTduw/oemzbx0+hS07\nu1Fnt0Kw5H756fuhdXYr5NJhTUZgfnMdrBZTav9azfHUvC8pX+FHhjGJiApLl4tvkhiJ4tAng5o/\nd/CoB+FIFAaFTCO1pXFXLHSlFqlwJIqoTNpwNJZ4HVCfJsJ0EiKiyqSrsPNkmbr+yBnyiejp9ysW\n2IipK5qF9RecbU2faZ+4p9+PpfOcECNRrGltRjQWx6HuQcU0kcnpQHV2Aa2LmE5CRKRnul58ldKP\nlDgdVsxussMlm6JjhQFxyRSfdK5aG5y1Z7sezW6yy6YWGQ3AzMZqvLTj6IT0pRULXFi/ag6ctTbJ\nO1mT0YhNaxciGovj3aMDGPaLOPTJIEymbnavISLSKV3/5rZaTFi5qFHz51pb3HBUC6i2WSRfHx0T\nZVN8Jh5nYujXUS2g2W2XfG+z244/7j0+JX1p18GT2HWwVzGEvGVnN3Z19cLrZ/caIqJKoOvFF5B/\nKtkqGNHsrkb6mmYTTFh3QXOqctVYUPrONhoDTvT7MafJDletDQZDor+vTTBm7Eb0wC1tmHPmDhhI\n3PHOabLj7htbsyoDqVw+0oOeft+07WCjpYsTEVE50XXYWYxE8d7HA9KvhWMYGA4h+XtZMBvxhc83\n4YZ1i2AyGjE4EoA3Q1h5LBjGsgUuHOoexLA/DKdDQFuLEx1fXIRqq/Rds2A249HbLoIvEEZPvx+z\nm+xwVAvo9wayKgOptK89OCrioeffgWuaNVFnE3ki0jtd/6ZSyqsFADFy9qmp8HgMb7zblwrVKqXx\nJA35wvjf7/Zh2B9Off3W4VN4dc+nGcfmqBawdJ4Tjmoh4/mUyjeqGed0C0OziTwR6Z2uF98qq/Yb\n92SVK6vFhCXzGrI6bzbNypW6HCmlDWntPuQLhCs6FMsm8kRUCXQddg6K45o/M+QTMTQawkxXDRbM\nrMWbh05pPobWLj/JMGkyJzn5RLTTYUXbYnfGtKEJ6Ua+kFSfCADA4GgIjzz/Dob9lRuKVdPpSe3P\nhYioVHT9W7nObkV9jfa/H5JVsf77QE+Gd0rT2uUnPUwKnE1FOn9RIzrWt2RcHJNlH390+xfw6G0X\nwemQfxK70p+IzjZ8T0RUTnS9+FotJpw3X75hvZxDnwxhcCSI04MBxffJlYrUUl1KKUx6qHtQU5jU\najFhttuOtsVNqj9TaaFYVv0iokqg68UXABbP1b5v6/WFcOT4sGy7v6RYDLh02TmquvzIpb2oCZNq\nNbn7UL1d4U44y3OUs3LuvsT0JyJSQ9d7vgDQMrte82caHDYsnlsvW40qyVlrw01XLwYA2S4/mdJe\nlKpwZRsmndx9qMpqxg/+5zt5PUc5K8fuS0x/IiItdP9bYYfCvq1c34TWlka46qpkq1Glvy/ZsF6u\ny0+mtJdChkmT43JUC9MyFFtO3ZeY/kREWuh68VXaTwUAR7UZS+fWo8FukQxP3n3jStl9XZtgwsb2\nc7M+f9dRDw51J1J/ihEmLedQbKXLNf2JoWqi6UfXYedMXY1GA+MYPT4MAKi2mvHANy5Afc3ZEKw/\nEJFtASiGo/AHIrKVrDKdf2hUxFNbD8FoSNR1fuCWtoKGScsxFDtdZJv+xFA10fSl6//C1VR/SgqI\n43joN/smfE8pZG00IuNeqZrzx+KJOtGPvdhVlDBpOYVip4ts058YqiaavnS9+FotJizVUKXKHxzH\n4EgQQLIutHzIOhoDwhnCgFqqT/V6/PAFlGtJkz5ls6/PSl1E05uuF18AWKzxaecPPh1Ej8ePI58N\nZezX29Pvn/K9yftz6Xutcg94AYk7YKnjVbLptJepdc+9ECloRKQfut7zBYBFc7Qtvv+0/SjGZfZ5\n0xkNwOyms09DK+3PJfdaT3r8+NGLByTbHE4+XiWbjnuZWvfcC5GCRkT6ofvfhEr7tlLULLxA4iGp\nZEciQF1K0bmz6mQX2MnHq2TTeS9T7Z47K3URTW+qFt9QKIT169fjD3/4A/r6+nDzzTejo6MDd911\nF8Lh4u9jipEo+gbG4AuEFVONsjXTVY3bv/z5VLhUy/7cA7e0YU6THcYzMWijAZjTlHjaeTrI117m\ndAhZMz2MaPpSFXb+5S9/ibq6OgDAz3/+c3R0dGDDhg3YvHkztm7dio6OjoIOMmlCONMnoq5GSPXa\nzZWrVsDgaOJYfYMBPPTc23Aq82aKAAAgAElEQVQ6BLQtbsKa1mbZvsFDoxNTSQSzGY/edhF8gTB6\n+v2Y3TR97niB3LsOTaeQNdPDiKavjL/NPvnkE3R3d+PKK68EAOzbtw/r1q0DAKxZswadnZ0FHWC6\nCeHMOPK28BqNSC286YZ8YezY34Md+0/AJkhPlVUwSe7POaoFLJ3nnFYLL5DYy7QK0guIYJGeq3TT\nMWTN9DCi6Sfj4vv444/jvvvuS30dDAYhCIkFxeVywePJf9hXSqZqVrmIZdgHfq97ULaHrhr5DKGm\nH6tQodncj5vdZDH9hoimC8Ww86uvvoqVK1dizpw5kq/HVa5IDQ3VMJtz+6u+b2BMNvSbLZMxsUxk\nWnyHfKJsGlE4EoVJsMDdWDPltWg0huf//QPsPdwHz3AQ7voqXLxsJm778nkwydW1lJF+rH5vEFVW\nEwADQuHxrI7rdjsKMt6+gTGEwtITKobl5yr52SGffMha6bPFJDV3pA7nLjecv+yV29wpLr67d+/G\niRMnsHv3bpw6dQqCIKC6uhqhUAg2mw2nT59GU1Pm3rJer3LfXDWikShsglH2F7tWq1rc2K/hTtpo\nhGQpygaHDdFwBB6Pb8prL+04ih37zz6N3e8N4rU9xxAIhtGxvkXTeCcfKyievQvUely321Gw8UYj\nUbhkUmictfJzlfys0yGffqP02WKRmzvKjHOXG85f9ko1d0oLvuLtzFNPPYVXXnkFv//973Hdddfh\njjvuwOrVq7Ft2zYAwPbt29He3p7f0SpSKmOhXrO7Bp+eGtX0Gbka0MWoYKQ25J5LaDZf480lhYbp\nN0Q0XWh+fPS73/0uXn31VXR0dGB4eBgbN24sxLimGPGLEMO57/m562z49v/9ecWGDHLaWhqLUsFo\n8p5rpgYS6cf1DAez2q/NZ8WlXFJozn7WCoMBcNVaKz79ZjqkVRHRRKorXH33u99N/f8XXnihIINR\nUme3osEhZCwJqcRoAB78xioIFpNsdSGlz37j/1oCwWIqWAUjuTSbje3nqhqvYDHhqd+/C68vrDlF\nJ58Vl/KRQhOPxxGPq3+uQI+mU1oVEU2km//CrRYTaqpyS9uptpnhqBY0NUSQ+myhKhjJpdm8uudT\nVNvkWxsmhcJRDPnCWaXoFCLkm00KTXIOkn9kJdO9KjHVaDqmVRFRgm4WXzESRSAUyekYFpNxQkOE\ndRc0w5aWk6p0syGYjZr3aS9dPhMXf74JrlprxvCr0p5r1xEPxoLyd/zOWqtsHrKW/dpSV1yaTqlG\n0+laiWgq3TRWULvvqXiMsXCqwpLJaMQN6xYhFouj66gHI2MRmA0GhGVyVIf94YzVmYBEKPHl1z/G\nm++fQujMHrXVYsBF583ATV9sQbVV+g5Wec9V/roNAG65ajGe3npI5rOZq0ollbriUq7VsfRkOl0r\nEU2lmztfNY3rM5m8d7llZzd2HTyJkbHEHXU4Kr+/qHbfc8vObrx+oDe18AKAGIlj7+HTeHXPp7Kf\nU27ILv+as9aGc2fVZtXMXU6pKi5l25Rej6bTtRLRVLpZfLPZp50sfe9Sa8UsNfuemY7ZdcQjG05U\nur62xW7F/VhHtVARKTrTKdVoOl0rEU2lm7AzgNTeY7KxgtNhxeK5DXjr8CnFz9mrzFixoBHXXDwX\n/d4A6uxWjPhF1U87r152zoR9TzESlQzLZgqNe32iYjgxeY6uIx54fSIaHFa0LXanvh+NxnDw4wGM\n+MNw1trQ2tKYeu3s3AzA6wuhwTHx9XzR2jBCbq7kFOs6ysF0ulaicqf1d1WudLX4JqWnoVgFE+qq\nTRgJyD+g4g+O463Dp7D3g1OIxQGnQ8B5852qzuWqteLmqxfDZDRmTA1RStcBEuFjNeFEg2Hi/0Zj\nMWzdfQyHPhnEiD+MersVKxa6JqSkFHq/Njw+jsde7EKvx49YPJF61exOtEoUzFP/GWWbRlPqfedi\nmk7XSlSuSpXyZ3rkkUceKdjRzwgE8tN96OXXP8aO/T0IntlPDYaj+HOfD9EYEFORDpp8SzAcxfHT\nflXnvHT5TLQuck88/5nSjkEximMnRxEUx7F8vgtmkxEDIyEcOyldPevSFWePpXh9k47/Xvcg3v14\nIPX90JnrTp43ndlkRE2VBWaFWsw1NVbNP5Mf/M/9ONHvT81hHMDoWBjvdQ9iTWuz6muRGrMUNddR\nCtnMXSbleq35Voi5m044f9lTmrtcf1dlOq8c3fzXrrSfOq7woFQuBLMBG9vPzXj+9NSQZAqT1XJ2\nam2CEWsvaFYMJyodv9cj/YfCwaMe9PT7JuwjF6Jaki8Qlh1Dr8cP36R/1EyjISI9KOXvKt2EnfOR\naqRVeDwOfyCCaqslp9QQNUWalI4vd1c/OCrioeffgavWivMXNcIA4N2PB/IeOunp98uOIRZPvL50\n3tkwPtNoiEgPlJ79GRot7O8q3Sy+mfZTC6HBLqT2aNWWX0ymGqUTIzHsPNALo8Eg2x1I6fhGg3JY\nfXBUxM5J50xWSwKguYPSZLOb7LJjMBoSr6ers1thFUwT0q2SBIuJaTREVBbq7FaYZDrWGY0o6O8q\n3YSd85FqpNXyBc7UAzBqUkMKlWrU7LZLfl+NfIROHNWC7Bia3XJPPVduTWYiqgzhSFS2Y100lni9\nUHSz+AJTyx86qjPXO87Fwtn1ExauTOUX1aYayZE7/gO3tKW+b9DYVVFrRyI5D9zShjln7oCBxB3v\nnKbE086TjfhF2b7LYjial/EQEeWqp1/5wdtMr+dCN2FnYGJqhkmwwOMZxQO/ebtg53v+Pz7Cv+35\ndMLeqVJqSK6pRkrHT37fMxzEU79/V3V3p3xVSxLMZjx620Wq8nzr7Fa4ZObBWcvqTURUHrRuqeWT\nru58k6wWE2Y21sBUhNQMqU4zcuUXM4XG2xa7VeVxKh1/ttuOtsVNqsef72pJjmoBS+c5FQtssHoT\nEelBdltq+aHLxTepymqGxihs1tTunUp1S7JaMqcaaTE5PO10WHHxshm4snVm2TShL3WHJCIiNbRs\nqeWTrsLOk/mDkaI91qM2RSbVLSmeyMMd8Ydhr7LAqHWzNsM5Ota3YGP7fPzuv4/io+Ne7Dt8GlbB\nVDZN6Fm9iYj0QMuWWj7pevHdcaCnaOfSsne6ZWc3dnWdTf3JZ9pPulf3HMObaXWt01N7kk3o831O\nrZIhdCKicpbcUisW3YadQ+FxHOoeKNr51O5VKqUbdR3p15T2k6xW5QuEp1StUtuViRWliIjKj27v\nfL2jxat4Ndtdo3qvUindaMgXxg9eeAcP37ZKshlBUnqh78FRMfU0ntMhoG1xEzatXai64hcrShER\nlR/d3vk21Mo3I8+3gZGQ6vrRSk3SAaBvKIDHXuxSPMaWnd3Ysb8nlaqTfAw+GUresrM743mS2Jid\niKj86HbxtQnmolW8CoWj8HgDqt6rphKXVDOCJDXh5INHE+F2NdfP1B4iovKj28UXSKSzuGoL/1Qa\nAISjMdXdgja2n4uln6uTfT3ZjECKmnByMpQ8OZ3HJphgE0wwIPfUnkJ0R8o3PYyRiEiKbvd8gUQ6\ny81XLcZTW9/P6vMGqKtAbDICv/zXwxm7BUVjMbz8+sd48/1Tkk0F0s1srJH8vpoGEslQslQ6D4Cc\nUntK1VhaCz2MkYhIie5/U61YmH3oWW0mbDSWSBeKQ7riVVKyo1GmhRcA/rj3M8nvqwlbTw4lp1fE\nkquOpVb6fnOm6y0VPYyRiEiJ7hffvoHCFb6uqzZNqFSVbnIKj9rUH7nPpzsbTk7cySYrrzgd0lWr\n5MKvasOy6SlNpWosrVYpm18TEeVLxrBzMBjEfffdh8HBQYiiiDvuuANLlizBPffcg2g0CrfbjSef\nfBKCUJy918nePHyyYMcejxkQCo9LvjY5hUdt6o/c59NNDidXWc0IiuNTQsly4devXzkfW3cfyxiW\nnfz5ersVXpmOQ+WSsqQ0z+UyRiKiTDIuvrt27cKyZctw++23o7e3F7fddhva2trQ0dGBDRs2YPPm\nzdi6dSs6OjqKMd4pklWcCmEsJL3wAlNTeNTs1aZT01Q+vTqUVLmzZPg1KRl+PXJ8GCfSHuiSq7A1\n+fNyCy9QPilLSvNcLmMkIsokY9j5mmuuwe233w4A6Ovrw4wZM7Bv3z6sW7cOALBmzRp0dnYWdpQy\nBkeCkLkxLTipfddipT4ByuHXXo90KD49LKs1TF4uKUvsmERElUD108433HADTp06hWeffRZ/+Zd/\nmQozu1wueDzKv8QbGqphNuf/l+LJ4eI1ZXfWWjHsE9FYX4WLl83EbV8+b0pLwzuvb4XNZsHr75xA\nUFT+q0AMR2ESLHA31iAUHod3VERDrRU2Qd2PpG9gDEM+6euX6k0JJMKyJsECADAJFtnPA+qut1Tu\nvL4V1VUC9h7uw8BwsOhjdLsdsq9l87OcTpTmjjLj/GWv3OZO9W+Hl19+GR9++CG+//3vT+iYo6Z7\njldlgQot3G4HZtUXJ8ToqrXioVsvnLDvOjQ0Jvneay87F1/6wlx4hoMIj0fx//3hfcnG985aG8Kh\nMJ7+3UdZpcxEI1E4HdLhV7nm0A0OG6LhSOLz4Yjs5121Njx06ypV11sqGy+dhw0XzZmQVlWMMbrd\nDng8vinfZ/pTZnJzR+pw/rJXqrlTWvAz/lY4fPgw+vr6AABLly5FNBpFTU0NQqEQAOD06dNoalLf\n3D2fXHVVMJsK39G32maBo1pQncKTbHo/f2adbOP71pZGvLrnWNYpM0rhV7nm0Olh2UzhWy3XWyq5\nplXlE9OfiEiLjIvv/v378fzzzwMABgYGEAgEsHr1amzbtg0AsH37drS3txd2lJMc6vbg0d904sBH\np4Ei9K31+oI48FE/fIGwbKehyd/vG/Djrff7cPmKmVi50IWqMylLycpTG9vPld1zfePdXhzqnvpa\neuqQLxDGigUuXL5yZqrCldNhxepl5+D7N56vqpG9XMP7je3z81I5Smuqk17ThLSkP0ldq96vn4i0\nM8QzxI1DoRAeeOAB9PX1IRQK4c4778SyZctw7733QhRFzJo1Cz/5yU9gsVhkj5Gv2/1TwwHc/+ze\nvBwrW0YjEIthQqehmioB/oAIrz+S8fNmkwGbv3spAsFx/O2v9mYs9PH4HZfAabdO6HJkMiYKfwCJ\nccx0VWNOkwMf9wxPCHlubJ8PfyA8JUVpcghGjEQx4hdhr7bg1T2f5hw6VRuC1WOoVip81e8NyP4s\njQbgx9+6GK4625RrPX9RIwwA3v14QDfXnwuGTXPD+cteOYadMy6++ZCvi77tpzvzcpxSM5sMeOZv\nLseDv96rKjVp/arZWaVUrV81e0JqUZLcP8SXdhyVPI/cceSoPU6+zldMUnMnRqKyP0tXrQ0/uv0L\neOWNT1T/DMv5+nPBxSM3nL/slePiq5s/r6XCsHo1Ho1jaCSoOjVp3+G+rM6jpeJTvipHqT1OJVWq\nyrR/DiBv1c+IqDLoZvHd2dVb6iHk1Xvdg6k9V4tZ+aExXyi7X8TJik9qqKkclc/j5Ot85eLrV87H\nnCZ7qhSo0QDMabLj61fOz7r6GRFVLt0svmvbmks9hLw6f6ErVUbyOxuXFeQcWio+JStHFes4+Tpf\nudi6+xhO9PtTKV6xOHCi34+tu48pXqsUPV4/EWmjm8U3l+5F5cZsMmBm49l0oEJdm5aKT/mqHKX2\nOJVUqSpTCB2Apupnert+ItLO9MgjjzxS6JMEAlOLTGTjC8tm4PUC1nJWw2hMZDcZDYmWhE6HgMb6\nKpgMUNVK0GwENv+PyyBMqvi1esU52PGO9mszGoBmdw1WLXFjdCwCMTwOZ60Nly4/B5vWLoTRMDWk\nXVNjlfyZfH5eA4LiOEb8YVXHkaP2OPk6XzFJzd3QaAj/6y3pFpFieByXLZ+JC5c2TbnWS5bNwPxZ\ntap/bnon9++O1OH8Za9Uc1dTIx/B0tXTzkmHuj340wen8YXFbry0o1uxIUA+2KtM+MbVS9Eytx6C\nxSTZaSiZrmMyGvDj33ZJjskA4MrWWej4YotsKsmHfx7EG++exBUrZ2F+c73sU7RWixHf+sp5WNhc\nl2q6kBzD5NSiyTI9+af2OJmoPU6+zlcM2T7tnLwuqWvV0/Xngk/r5obzl71yfNpZl8VnVyx0Y90l\n8+Hx+HCkZ6SgnY0AoMFRhQuWnK1UJdVpKL0D0QVL3JJjigPYdfAkTCajbCrJ0nkuLJ3nSn3d2iJ9\nLDESw4efedG66Gw4M30MuSj2cfJ1vlJJhtClfk5SDTgmX6ver5+ItNPNnm86MRJF38AYxEgUn59b\nX/DzBUIRTY3qN61diDVtzaknXyfTkkqysX0+bIL0j0nuOHqvmKTH8ctVC5tcVYyICNDZne+Eikg+\nEU6HFePjhf8F7fWJqSbtaqoymYxGXH3hHOySSY/S0vTdHwhDDMdUHUePFaPS6Xn8ySfXv3bFgmkR\nQiai3Ohq8ZVqHl8M6Y3v5RrYAxMb1dfZrbAJJsmHsNKPl4mW5vFqx1au9D5+gCFkIlKnvG8n0mht\n/l7sMUiHgHN/lk1tSo7eK0bpffxERFroZvHVWiUon8Rw4mlUNVWZkvuVHm8AIZlwcfJ4wNT9TV8g\njA//PDShg9LG9nPP7CdaYTAk+gsnOyMlP6v3ilF6H38pad0j1+OeOlGl0U3YWSn8WmjO2rPhXbkx\n1Nut2PbOCRzqPtuhxiYYJRdgZ60N9moBL+04mtrfbHAICI/HEAiNp6okmYwGxGJxOGutqLZZEIvF\nEI8DsVgMR44P4+Hn3k6da8UCl+rwdDnSEl6nBK175HreUyeqNLr5L04p/FpoyfCu0hhqqizY1dU7\noZm63J1va0sjXt1zbELz9SFfGP7g2YUXAKKxeOpYJ/r9qZaFXn8EJ/r9E8616+BJVNuk2zrqoWJS\nJVW8KpbkHnn6v4Md+3uwZWd3Xt5PRIWjm8UXmJrOoaVebjacDuuUdBGplJI1rbMQCEn38rUJJjgd\n1knN6s8tyP71WDCCNW3NeUl3KUVokuk66mndI+eeOlF50U3YGZiYzmESLHjvw1P4xauHC3IuA4C/\nuf58zHbbJ3xfKqVkxC9i98GTkscJR6K4/+YLIJiNqfSTvsGxgoTPh/0irr5wDq5fszDrdJdShiaZ\nrqOemj3y9Keutb6fiApLV4tvktVigruxBicKeOfrrLXCXV+lOIbkL6tM+5Xu+qoJi8iO/SfyP2Cc\n3RvNJd2lHNJ9mK6TmdY98jq7FdY8pL4RUX7oKuw82axJd6X5tGKh8j5jelhWab9yxUJX6ino5OcO\nfTJYkDHnujdaiNBkNuFrPo2bWXZ75AUv405EKunyzjfJajHhc03V+Kw/oPmzBgNQYzMjHBlHeHzq\n6+997IHJaJgSbpULy3718nNx5Pgwej2Jnq5GA1BtM+Pdo/3Y3dWbet+a1mbVKVMmowGxeBxOR+Jp\n57FgBMN+EfV2K2qqLAiEIvD6RDQ4bGhtacx5bzSfoclswtd8Gleb5M/74NEBeH0hxX8HI375BwCT\nqW+MNhAVj64XXwBZLbz2KjMevvVCuOqqIEai8AwH8e9v/hnvfNSfes+QLywZbpULyx45PowT/f7U\n92NxwB8cn/K+6JnUIaU937ZFjfjGhiWpDkqTOyfJfZ2rfKb7ZBO+LoeQt55o2SOvs1vhkvnZpqfS\nEVFx6Pp24sM/Zxe+vfi8c+CqS+znWi0muOurcOzkiOR708OtSmHZXo9f8vuTHeoexIoFLsX3fHba\nD+FMalNTQ/WEBvRKX+cqX+k+2YSv+TRu9tT8O2AqF1F50fWd7xvvSj9hLMdsBC5vbZ4SllMKtw6N\nhnCsdwTzm+sU3xdTuZ3m9YWwftUciJEY3jp8SvY9yZ7BPf1+zG5K7G0n/396K8N80xLKlJNN+JpP\n4xZe8mfYdcRzZrvCirbFbqZyEZWArhffK1bOwtsfqc+XrbNbYTRM7fOnFG41GICfvfxuxipSRoO6\nBbjBYYOz1oabr16MI8e9MiFeK575w/voGxibckyjAWh22/HALW0QzPn/8eUj3Seb8DUrXBVP8j8B\nif8UiKhIdB12Tm86r4ZcRR+lkFwsDlVVpJpVPnmtplqWGImi1zN14U2O50S/H4+92KXqfNnKJaSd\nTYiTYdHCY4UrovKh68VXjEQhZPE7WWoPMb26kgGJO0wpclWkHrilbVJ1JivmNNmnVLfKVC3ripWz\nMBaUePx6kl6PH75AWPvFF0k21apY4apwuKdOVF4M8Xg8Y7D0iSeewIEDBzA+Po6//uu/xvLly3HP\nPfcgGo3C7XbjySefhCDI70N6PL68DhoAnM4aPPHiO7L7pkqMBuDH37pYcg9RjERxrHcEP3v5Xcms\nyORnk5WtJodls3kiOf09x3pH8OTL76q6ju/fsBJL5zlVvTed2+0oyM9ESjZPZOf7Ke58Kubc5VO/\nN4C//dVexX/Thd5T1+vclQvOX/ZKNXdut0P2tYybhnv37sXHH3+MLVu2wOv14qtf/SouueQSdHR0\nYMOGDdi8eTO2bt2Kjo6OvA46k+f//YOsFl5AuaKP1WLC/Oa6jPuPclWYJn9fTbWm9PfMbrKr2j82\nGpB6EKucZVOtihWu8o976kTlJWPY+cILL8TTTz8NAKitrUUwGMS+ffuwbt06AMCaNWvQ2dlZ2FFO\nIkai2Hu4r2DHL+X+o6NaULV/3Owu7FPPVFm4p05UXjLe+ZpMJlRXJ+5Ctm7dissvvxx/+tOfUmFm\nl8sFj0f5ieOGhmqYzfn7j/vPfSPweINZf14MR2ESLHA31gBIpLkcPeFFXY0Vc89JhAm+tq4FgmDG\n/g9PY2A4iMb6Kixb0IhvblyGmip1i14oPA7vqIiGWitsgvonk5/6f6/A95/Zgz+fGkVsUlEioxGY\nd04tnvxuOwSZY6o5r1I4hJTpde7uvL4V1VUC9h7ug2c4CHd9FS5eNhO3ffk8mEzFefxDr3NXLjh/\n2Su3uVO9IuzYsQNbt27F888/j6uuuir1fRVbxvB6tVehkpIsP9h1pD+nKrXOWhui4Qh6+7z40YsH\n0NM/NuF1q8WIcCQGZ60Vyxe4IIZrceS4F7v2n8B7R/uLUibxwVtWwRcIy+b5joxM/eND7Xm5d5Q9\nPc9dNBZDIBjG+HgU8TgwPh5FIBiGZ8BXlPKdep67csD5y54u93wBYM+ePXj22Wfxm9/8Bg6HA9XV\n1QiFQrDZbDh9+jSampryNlglk8sPZisZZnv4+benLLwAIEYSt5uDo1NbBRazTKKjWpjwQFWmh6tY\nnpGUTP73IVdClYgKL+Ofuz6fD0888QR+9atfob6+HgCwevVqbNu2DQCwfft2tLe3F3aUUE6V0EIw\nG3H5ipk4dnIYPf3qSkJKKUaZRKnuPnIdf/JxXnYTKo1izDtTjYjKS8Y73z/+8Y/wer34m7/5m9T3\nfvrTn+LBBx/Eli1bMGvWLGzcuLGggwSUyw9qER6P4aHn38n5OIUskygVPj5/USMMAN79eEAypJzL\nedlNqDSKOe8jflG2mcfQKMt3EhVbxsV306ZN2LRp05Tvv/DCCwUZkBylVIlSKGSZRKnw8c4DvRPe\nMzmknMt5Ga4ujWLOe53dCptglGwraBXkU++IqDB0c1ujlCpRCoUqk6g1vJ4MGWZ7XoYjS6M0885i\nzkTlQleNFSZ33KmpssAXiOT9PFbBiEgkhgaHDSsXuRAH8N7Hg6q7/Eh1BlqxwIk1rc2phVKO1vB6\nekg5m45EmTo6MRxZGMXu4jTiFyGGpRf08JmKYvw5ExWPrhbf9I47JsGCkeExfP+X+SvwUWcX8IPb\nLprSxB4ArrtSfcnD9HEOjYaw40APDnUPYPfBkxn39bSG19NDytl0JMrU0WnbOyfQsX4R937zrNgV\np1jhiqi86PI3qtViwszGGrjqqvIaSLtwSRMc1YJkR59suvxYLSbsOtiLXV29qjvJaA2vS4WUtYzV\najHJdmqKxYFdXb3selMAxa44xQpXROVFl4tv0uBIMKdiG8mF2+kQsHrZOdjYfu6U90xOA/EFwvjw\nz0NTOgrJpQVls68n1d1n7QXNWHfB1G5Km9YuzClVRYxEMRZU7o7Evd/CKHYXJ3aNIiofugo7T3bk\n+HBWnzMg0aO3zi6gSjBDHI+i8/ApHDnuTYWEAUxIA6m3WxCJxhEIjSMWP9vU/r6bWvGv//tTyXQR\npX29wdEQhkZDmOmqmfKaUvj462nhb7PJkHOqyohfhNenvPgWYg+Sstsm0NP5iEierhffxXPrs/pc\n8m552B/GMM4uPOmpHgAm/H+vf+KDXcmm9vf+shP+tP676cf42hULFPdvd+w/gZuvXiI7TqnuPunf\ne2nH0ZxTVdTsMXNPsLCK3cWJXaOISk/XYWdXXRWqhPxfwsGjHnQd6Vf1Xr9M4/uDRwcAACsWNsp+\n9tAnQ1mHc/OVqqJmj5l7guqxShgRqaHrO18AuOS8Gdh5ML/tBYd8IlT0i1CUDNWuv2A2dnX1Kr4n\nm7uQfKaqJMPsXUc8GPKJqX7CrrQwNiljlTAi0kL3i+8Hf85u31eJ02FFPB7HUIa9UCXpoVpXAVI8\n8pk6MnkvsMpqRlAc556gBqwSRkRa6PpPcl8gDM9w9n195bS2uNG2WF2nJnuV9N8vyVBtoVI8CnHc\n5F6go1rQnFY1nbFKGBFppes7355+P2JZhIeTTzs7HQJqqgQEQhF4fWKqItTG9vkY8YuIxuI41J2o\nbFVXIyASjck+7dx1xHPmGFa0LZ4Yqs2m8pQahTquEjGivtjIdFHsalVEpH+6XnxnN9lT+5NqGQzA\nj/7qIphMxtQCklxQ7NUWvLrnUzz83L7Uvt2KBS6sXzUHdXYrXt1zDF1H+jHkC6PeLmDx3HqYjIbU\ncdP/N12hUjyKmTrCPU15rB5FRFrpevF1VAtodttxQkNf3ngcMJmME+5EkuFWqdSdXQdPwmRKLC5S\njciPHB+ecH6lvb5CpZ+hjeAAAA/LSURBVHgUI3WEe5ryklsA6fOTxCfFiUiK7m9Z7r6xFVpuvBrs\nAsLjMU3N6LuOeGRf6/VIL/yVtNfHPc3MWD2KiLTQ9Z0vAPgDYcSmtiiVFQxH8fBzb2tsRi9fgEIu\n5F1Je33c08yM1aOISAvd3/nuODA11KckFI5KNjhI7ttJaXDIv2aU6exQSXt9ynNTOdeZD9k04CCi\n6UfXi68YieJQ94Cq91ot0peqphl922K37GvNbrvk9ytpr48dcYiI8kvXYWc1jeedDiuWfK4BnYdP\nSb6utRn95Ne+fuV8bN19rKjpPqVQirQmIqJKZYjHcy2kmJnH48v7Md1uB3pODuPBX++VTPFIL5G4\nYoELhz4ZlHyfq9aGH93+hQl3b0q5rHKv6Sn/1e12ZP0z0dN1FkIuczfdce5yw/nLXqnmzu12yL6m\n67CzUjg0+SBUMl1IrmG81mb0cq9Nl72+6XKdRESFpOvFF5iY4mEwyD8ANRaMYE1bM5wOKwxIhKOV\nUkG0dqeZLt1spst1EhEVkq73fIGJKR7Hekfw5MvvSr7P6xMRDkcVK1EB2is5TZfKT9PlOomIikH3\ni2+S1WLC/OY62Q5CVsGEN9MeupKr0KS1ktN0qfw0Xa6TiKgYKuqWRU1j+MkOHvWgp98HMRKFLxDG\n/o/6Zd43tZLTdKn8NF2uk4ioWFTd+R49ehR33HEHbr31Vtx0003o6+vDPffcg2g0CrfbjSeffBKC\nIBR6rKpIpcQsnlsvm2o0OCrioeffgU0wIh4DxHHpcllSlZymS+Wn6XKdRETFknHxDQQC+OEPf4hL\nLrkk9b2f//zn6OjowIYNG7B582Zs3boVHR0dBR2oWlJl/gDgyHGvZDg6KRRWrlEpVclpunSzmS7X\nSURULBnDzoIg4Ne//jWams42l9+3bx/WrVsHAFizZg06OzsLN8IspafEZBOOnkwuJWk6VH6aLtdJ\nRFQsGe98zWYzzOaJbwsGg6kws8vlgscjvR+Y1NBQDbM5/7+glRKY0434RVzeNhsmkxEHj3rgGQ5C\nbWmReruAtiUz8M2Ny1BTNTW0fuf1raiuEtD5/kkMDIfQWG/DJctn4bYvn5dqRViO1M5dUvI69x7u\nw8BwEI31Vbh42cyyv85C0Dp3dBbnLjecv+yV29zl/LSzmgJZXm8g19NMoaZiSXh8HI+92IVejx+x\neCIHuMpqht1mgi+o7iGhYX8YO/efwMGPTuGCJTOmpNZEYzEEgmHEzlT1iMXiCATD8Az4yjYFJ9tq\nLxsvnYcNF82ZUOFqaGisACMsX6wylD3OXW44f9krxwpXWS2+1dXVCIVCsNlsOH369ISQdDl57MWu\nCY3uY3FgLDSe1bG8/kheUpP0LhnOJyKi7GV1a7Z69Wps27YNALB9+3a0t7fndVD54AuEZRvd56Lr\niCeVWsMUHCIiykbGO9/Dhw/j8ccfR29vL8xmM7Zt24af/exnuO+++7BlyxbMmjULGzduLMZYNenp\n98s2us/FkE/EP207gluvWcIUHCIiykrGxXfZsmX47W9/O+X7L7zwQkEGlC+zm+ypzkb59ubhU6iy\nmfG1KxYwBYeIiDQrzyeC8sBRLcg2us+Hg0cHAIApOEREpFnFLr4A8MAtbZhz5g4434bOhJXTuyoZ\nDYn+wErdkoiIiCqmsYIUwWzGo7ddBF8gjE/7RvGP//khvP6IpmPIha4NALa9fRwdX2yZUlGLd7xE\nRKSkou98kxzVAlYsaMQFS2Zo/my1Tfrvk1gc2HXwJLbs7AbAJvNERKReRS++kxu/Tw4ROx1WWAXl\nKTAAuGzFObKha6YUERGRVhUZdlZq/J4eIg6Px/Dwc28rHssXHMfb/6df9qlpphQREZFWFbn4Zqo6\nlQwRi5GobKpQurBMm0GAKUVERKRdxYWdtVSdKlS3IyIiIiUVd+ebqeqUZzgIwWxMPZWcTAk6eNST\n8Q4YSHQ5Gh0Lo8FhQ2tLI1OKiIhIs4pbfOvsVjQ4BAz5wlNes5iNeOr378LrC0/YB960diGi0Ri6\njnowMiafiuR0WPHwX16IoDjOlCIiIspaxS2+VosJNVXSi68YiUGMJL6fvg8MJNKGMmlb7IajWoCj\nempfXyIiIrUqbvEVI1EEQuoLabzzUT+MyFwA2moxYmP7fIiRaFkU0yiXcRARkXYVt/gOjYZU7d0m\njfin3iFLESMx/O6/j+Kj494p6UsmY/GeW1NKoyrmOIiIKHsVt/juONCT+U1ZMBkT3YySJqcvFUum\nNCoiIip/FXWrJEaiONQ9UJBjR2VSfQ8e9RStwpWWNCoiIipfFbX4KqUZFcrgqIjfbjuCaEy+EEe+\nZEqjGvEX99qJiCg7FbX41tmtcNYWv9rUW4dPpRosFJLS9bHSFhGRflTU4puPilVyTBlmqhhhX6Xr\nY6UtIiL9qKjFF0h0LrqydRYs5vxeWjQGtLU0yr5erLDv5M5Mrlob1q+aXVGVtiZ3oyIiqjQV9bRz\nNBbD717/GHs/OIWIQjOEbDgdieIaRgMkOxwVK+xrMhondGaqpDxfplER0XRRUYvvlp3d2HmgtyDH\nDo/H8Ma78lWwih32TXZmqiRMoyKi6aJibifESBRdR/oLdvyx4Ljk940GYE3rLGxsP5eh0hwwjYqI\nppOKufMd8YuS9ZzzRa4AZRyJ6lcPP/c2Q6U5GPGLspXJhkYT++mVdqdPRNNXxawOdXYrGuyW4p84\nnkg1GhwVEcfZUGkxUo8qSZ3dCpsg/c/RKpiYRkVEFaUiFt9oLIZX3vgEAbH4oUm5O2KGSrNhKPUA\niIiKIuvF98c//jE2bdqEG264AYcOHcrnmDRLPqgjRgpfZUotVpzSZsQvQgxL/7ESPtPBiYioUmS1\n+L799tv47LPPsGXLFjz22GN47LHH8j0u1ZQe1FGrSsj/U8qsOKUNq3cR0XSS1eLb2dmJ9evXAwAW\nLFiAkZER+P3+vA5MrXzUc165qBEumV/8tgwLs71K+pk1VpzShtW7iGg6yWrxHRgYQENDQ+prp9MJ\njye3u89s5VrP2Wwy4LYvLZX9xb96+TlnKkpNPIcBwJwmOx7/fy6p+IpTxTIdqncREQF5SjWKx+Ue\nO0poaKiG2Zz/Oxe32wEAuPT8Zry259iU12c32RGORDEwHES9XYAvOD6h8pWj2oLn7l+PqioBd17f\niuoqAXsP92FgOIjG+ipcvGwmbvvyeTCZjAiFx+EdFWEyGtA3OIZ5M2tTodC7bnSmXm+otcImlH8G\nV3Luys1dN15Q9nNZrnOnB5y73HD+slduc5fVb7ampiYMDJztm9vf3w+3W76hgdcbyOY0itxuBzwe\nHwDgy5fMRSAYxsGjA/D6Qmhw2NDa0ohNaxdiPBqfUIZxcCSII8eHsXhuPVx1VfD7RfjPPMyz8dJ5\n2HDRnAnvHxoaS53TDABRYFa9DeFgGJ7gxLxiMwDfSBC+vF9tfqXPXbkq17nUw9yVK85dbjh/2SvV\n3Ckt+FktvpdeeimeeeYZ3HDDDfjggw/Q1NQEu92e9QBzpVTv2GTEhOIMrroqrF5eJXusSizbSERE\n5SWrxbetrQ3nnXcebrjhBhgMBjz88MP5HldWuHASEZEeZL2hdvfdd+dzHERERNNGRVS4IiIi0hMu\nvkREREXGxZeIiKjIuPgSEREVGRdfIiKiIuPiS0REVGRcfImIiIrMEM9UmJmIiIjyine+RERERcbF\nl4iIqMi4+BIRERUZF18iIqIi4+JLRERUZFx8iYiIiizrloKl8uMf/xjvvfceDAYD7r//fqxYsaLU\nQypLR48exR133IFbb70VN910E/r6+nDPPfcgGo3C7XbjySefhCAIeO211/CP//iPMBqNuP7663Hd\nddeVeugl98QTT+DAgQMYHx/HX//1X2P58uWcOxWCwSDuu+8+DA4OQhRF3HHHHViyZAnnToNQKIS/\n+Iu/wB133IFLLrmEc6fSvn37cNddd2HRokUAgJaWFnzzm98s7/mL68i+ffvi3/rWt+LxeDze3d0d\nv/7660s8ovI0NjYWv+mmm+IPPvhg/Le//W08Ho/H77vvvvgf//jHeDwej//d3/1d/J//+Z/jY2Nj\n8auuuio+OjoaDwaD8S996Utxr9dbyqGXXGdnZ/yb3/xmPB6Px4eGhuJXXHEF506l//iP/4j/wz/8\nQzwej8d7enriV111FedOo82bN8evvfba+CuvvMK502Dv3r3x7373uxO+V+7zp6uwc2dnJ9avXw8A\nWLBgAUZGRuD3+0s8qvIjCAJ+/etfo6mpKfW9ffv2Yd26dQCANWvWoLOzE++99x6WL18Oh8MBm82G\ntrY2dHV1lWrYZeHCCy/E008/DQCora1FMBjk3Kl0zTXX4PbbbwcA9PX1YcaMGZw7DT755BN0d3fj\nyiuvBMD/ZnNV7vOnq8V3YGAADQ0Nqa+dTic8Hk8JR1SezGYzbDbbhO8Fg0EIggAAcLlc8Hg8GBgY\ngNPpTL2H8wmYTCZUV1cDALZu3YrLL7+cc6fRDTfcgLvvvhv3338/506Dxx9/HPfdd1/qa86dNt3d\n3fj2t7+NG2+8EW+++WbZz5/u9nzTxVkZMyty88b5PGvHjh3YunUrnn/+eVx11VWp73PuMnv55Zfx\n4Ycf4vvf//6EeeHcyXv11VexcuVKzJkzR/J1zp2yefPm4c4778SGDRtw4sQJ3HLLLYhGo6nXy3H+\ndLX4NjU1YWBgIPV1f38/3G53CUekH9XV1QiFQrDZbDh9+jSampok53PlypUlHGV52LNnD5599ln8\n5je/gcPh4NypdPjwYbhcLsycORNLly5FNBpFTU0N506F3bt348SJE9i9ezdOnToFQRD4706DGTNm\n4JprrgEAzJ07F42NjXj//ffLev50FXa+9NJLsW3bNgDABx98gKamJtjt9hKPSh9Wr16dmrvt27ej\nvb0d559/Pt5//32Mjo5ibGwMXV1dWLVqVYlHWlo+nw9PPPEEfvWrX6G+vh4A506t/fv34/nnnweQ\n2CIKBAKcO5WeeuopvPLKK/j973+P6667DnfccQfnToPXXnsNzz33HADA4/FgcHAQ1157bVnPn+66\nGv3sZz/D/v37YTAY8PDDD2PJkiWlHlLZOXz4MB5//HH09vbCbDZjxowZ+NnPfob77rsPoihi1qxZ\n+MlPfgKLxYL/+q//wnPPPQeDwYCbbroJX/nKV0o9/JLasmULnnnmGZx77rmp7/30pz/Fgw8+yLnL\nIBQK4YEHHkBfXx9CoRDuvPNOLFu2DPfeey/nToNnnnkGzc3NuOyyyzh3Kvn9ftx9990YHR1FJBLB\nnXfeiaVLl5b1/Olu8SUiItI7XYWdiYiIKgEXXyIioiLj4ktERFRkXHyJiIiKjIsvERFRkXHxJSIi\nKjIuvkREREXGxZeIiKjI/n+cErRTiKEiVgAAAABJRU5ErkJggg==\n","text/plain":["<Figure size 576x396 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"6KIqZk8flTS-","colab_type":"text"},"cell_type":"markdown","source":["Pretty simple. Now what if we want to add axis labels and a title?"]},{"metadata":{"id":"KXThfeLulj-v","colab_type":"code","outputId":"945dceea-bdd7-40de-9869-2b2303db71aa","executionInfo":{"status":"ok","timestamp":1550018255439,"user_tz":420,"elapsed":713,"user":{"displayName":"Ryan Allred","photoUrl":"","userId":"04031804316926795705"}},"colab":{"base_uri":"https://localhost:8080/","height":376}},"cell_type":"code","source":["plt.scatter(df['age'], df['fare'])\n","plt.xlabel('Age')\n","plt.ylabel('Fare')\n","plt.title(\"Age by Fare\")\n","plt.show()"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"image/png":"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\nRBrGQE5ERKRhDOREREQaxkBORESkYQzkREREGsZATkREpGEM5ERERBrGQE5ERKRhDOREREQaxkBO\nRESkYQzkREREGsZATkREpGEM5ERERBrGQE5ERKRhDOREREQaxkBORESkYQzkREREGsZATkREpGEM\n5ERERBrGQE5ERKRhDOREREQaxkBORESkYQzkREREGsZATkREpGEM5ERERBrGQE5ERKRhqgZyj8eD\nGTNm4NVXX8Xhw4excOFCLFiwAMuWLYPP5wMArF+/HhdffDHmz5+Pl19+Wc3iEBER5RxVA/kf/vAH\n9OvXDwDw8MMPY8GCBXjxxRfx3e9+F1VVVXC73Xj00Ufx7LPP4oUXXsBzzz2H5uZmNYtERESUU1QL\n5AcOHMD+/fsxZcoUAEB1dTWmT58OAJg6dSq2bduG3bt3Y8yYMbDZbLBYLJgwYQJqamrUKhIREVHO\nUS2Q33333VixYkX4352dnTCZTACA8vJyuFwu1NfXw263h59jt9vhcrnUKhIREVHOMajxpq+99hoq\nKysxZMgQwb8Hg0FFj8cqKyuCwaBPuHyRHA5bSt4nG7Au2Yl1yU6sS3ZiXZRTJZBv3boVBw8exNat\nW3HkyBGYTCYUFRXB4/HAYrHg6NGjcDqdcDqdqK+vD7+urq4OlZWVcd+/qcmdknI6HDa4XG0pea9M\nY12yE+uSnViX7MS6SL+fGFUC+YMPPhj+70ceeQSDBg3Crl27sGHDBvzwhz/Exo0bMXnyZIwbNw6r\nVq1Ca2sr9Ho9ampqsHLlSjWKRERElJNUCeRCrr/+eixfvhzr1q3DwIEDMXfuXBiNRtx444245ppr\noNPpsGTJEthsuTOsQkREpDbVA/n1118f/u9nnnmmz99nz56N2bNnq10MIiKinMTMbkRERBrGQE5E\nRKRhDOREREQaxkBORESkYQzkREREGsZATkREpGEM5ERERBrGQE5ERKRhDOREREQaxkBORESkYQzk\nREREGsZATkREpGEM5ERERBrGQE5ERKRhDOREREQaxkBORESkYQzkREREGsZATkREpGEM5ERERBrG\nQE5ERKRhDOREREQaxkBORESkYQzkREREGsZATkREpGEM5ERERBrGQE5ERKRhDOREREQaxkBORESk\nYQzkREREGsZATkREpGEM5ERERBrGQE5ERKRhDOREREQaxkBORESkYQzkREREGsZATkREpGEM5ERE\n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\nXezevRsAUFtbi+LiYhx//PFpq0ve7n523333YceOHdDpdLjttttw0kknZbpIsu3duxd33303amtr\nYTAY0L9/f9x3331YsWIFvF4vBg4ciN/+9rcwGo2ZLmpc69atwyOPPILhw4eHH7vrrruwatUqzdXF\n4/HglltuweHDh+HxeLB06VKMHj0ay5cv11xdIj3yyCMYNGgQzjrrLE3Wpb29HTfddBNaW1vR1dWF\npUuXYtSoUZqsC9Bz66aqqgoA8LOf/QxjxozRbF327t2LBx98EE899RSAnrkMt956KwKBAMaNG4df\n/vKXGS6hPB0dHVi5ciUaGhrQ3d2NZcuWweFwpK0ueRvIiYiIckFeDq0TERHlCgZyIiIiDWMgJyIi\n0jAGciIiIg1jICciItIwBnIiCqurq8P3vvc9PPHEE5kuChHJxEBORGGvvfYajj/+eLz66quZLgoR\nycRATkRhr7zySnizl5qaGgDA3//+d/zXf/0XFi5ciCeeeAJnn302AKClpQU33HADFi1ahIsuughv\nvPFGJotOlLcYyIkIAPDJJ5+gu7sbp59+OubOnYtXX30VwWAQt912G+655x688MILaGtrCz//wQcf\nxOTJk/H888/jj3/8Ix5++GE0NjZmsAZE+YmBnIgA9O5CpdPpcNFFF+Htt9/G4cOH4Xa7wymMZ82a\nFX5+dXU1/vznP2PhwoX46U9/CoPBgEOHDmWq+ER5Ky93PyOiaO3t7di4cSMGDBiAd999FwAQCARQ\nXV0NnU4Xfp5erw//t8lkwm233YYxY8akvbxE1Is9ciLCm2++iVNPPRVvvfUWXn/9dbz++uu44447\n8Ne//hUFBQX45ptvAPTs4hRyyimn4O233wbQs2HM7bffHrV1IxGlBwM5EaGqqgqXX3551GOzZs3C\ngQMHcOWVV2LJkiW45pprYDKZYDD0DOQtXboU//73v3H55ZfjRz/6Eb73ve+F/0ZE6cPdz4hI0qZN\nm3DiiSdiyJAh2LhxI9atWxfe35uIMo/NZyKSFAgEcP3118NqtcLv9+P222/PdJGIKAJ75ERERBrG\ne+REREQaxkBORESkYQzkREREGsZATkREpGEM5ERERBrGQE5ERKRh/x+/OvnzMTpavwAAAABJRU5E\nrkJggg==\n","text/plain":["<Figure size 576x396 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"AvI_v0rClivf","colab_type":"text"},"cell_type":"markdown","source":["# Now it's your turn! \n","\n","Check out the assignment and go through the exercises. Don't be afraid to google, and reach out to someone if you're stuck on anything for more than 20 minutes! Check out the matplotlib documentation and see what other ways you can customize your scatterplot."]}]}